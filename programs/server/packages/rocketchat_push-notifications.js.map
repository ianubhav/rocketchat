{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:push-notifications/server/methods/saveNotificationSettings.js","meteor://ðŸ’»app/packages/rocketchat:push-notifications/server/models/Subscriptions.js"],"names":["Meteor","methods","saveNotificationSettings","rid","field","value","userId","Error","method","check","String","indexOf","subscription","RocketChat","models","Subscriptions","findOneByRoomIdAndUserId","updateDesktopNotificationsById","_id","updateMobilePushNotificationsById","updateEmailNotificationsById","updateUnreadAlertById","saveDesktopNotificationDuration","updateDesktopNotificationDurationById","desktopNotifications","query","update","$set","desktopNotificationDuration","mobilePushNotifications","emailNotifications","unreadAlert","findAlwaysNotifyDesktopUsersByRoomId","roomId","find","findDontNotifyDesktopUsersByRoomId","findAlwaysNotifyMobileUsersByRoomId","findDontNotifyMobileUsersByRoomId","findNotificationPreferencesByRoom","$exists","$or","findWithSendEmailByRoomId","fields","u"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,OAAP,CAAe;AACdC;AAA0B,oCAASC,GAAT,EAAcC,KAAd,EAAqBC,KAArB,EAA4B;AACrD,OAAI,CAACL,OAAOM,MAAP,EAAL,EAAsB;AACrB,UAAM,IAAIN,OAAOO,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD,EAAEC,QAAQ,0BAAV,EAAvD,CAAN;AACA;;AAEDC,SAAMN,GAAN,EAAWO,MAAX;AACAD,SAAML,KAAN,EAAaM,MAAb;AACAD,SAAMJ,KAAN,EAAaK,MAAb;;AAEA,OAAI,CAAC,sBAAD,EAAyB,yBAAzB,EAAoD,oBAApD,EAA0E,aAA1E,EAAyFC,OAAzF,CAAiGP,KAAjG,MAA4G,CAAC,CAAjH,EAAoH;AACnH,UAAM,IAAIJ,OAAOO,KAAX,CAAiB,wBAAjB,EAA2C,wBAA3C,EAAqE,EAAEC,QAAQ,0BAAV,EAArE,CAAN;AACA;;AAED,OAAI,CAAC,KAAD,EAAQ,UAAR,EAAoB,SAApB,EAA+B,SAA/B,EAA0CG,OAA1C,CAAkDN,KAAlD,MAA6D,CAAC,CAAlE,EAAqE;AACpE,UAAM,IAAIL,OAAOO,KAAX,CAAiB,wBAAjB,EAA2C,wBAA3C,EAAqE,EAAEC,QAAQ,0BAAV,EAArE,CAAN;AACA;;AAED,OAAMI,eAAeC,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCC,wBAAhC,CAAyDb,GAAzD,EAA8DH,OAAOM,MAAP,EAA9D,CAArB;AACA,OAAI,CAACM,YAAL,EAAmB;AAClB,UAAM,IAAIZ,OAAOO,KAAX,CAAiB,4BAAjB,EAA+C,sBAA/C,EAAuE,EAAEC,QAAQ,0BAAV,EAAvE,CAAN;AACA;;AAED,WAAQJ,KAAR;AACC,SAAK,sBAAL;AACCS,gBAAWC,MAAX,CAAkBC,aAAlB,CAAgCE,8BAAhC,CAA+DL,aAAaM,GAA5E,EAAiFb,KAAjF;AACA;AACD,SAAK,yBAAL;AACCQ,gBAAWC,MAAX,CAAkBC,aAAlB,CAAgCI,iCAAhC,CAAkEP,aAAaM,GAA/E,EAAoFb,KAApF;AACA;AACD,SAAK,oBAAL;AACCQ,gBAAWC,MAAX,CAAkBC,aAAlB,CAAgCK,4BAAhC,CAA6DR,aAAaM,GAA1E,EAA+Eb,KAA/E;AACA;AACD,SAAK,aAAL;AACCQ,gBAAWC,MAAX,CAAkBC,aAAlB,CAAgCM,qBAAhC,CAAsDT,aAAaM,GAAnE,EAAwEb,KAAxE;AACA;AAZF;;AAeA,UAAO,IAAP;AACA;;AAtCD;AAAA,IADc;;AAyCdiB;AAAiC,2CAASnB,GAAT,EAAcE,KAAd,EAAqB;AACrD,OAAMO,eAAeC,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCC,wBAAhC,CAAyDb,GAAzD,EAA8DH,OAAOM,MAAP,EAA9D,CAArB;AACA,OAAI,CAACM,YAAL,EAAmB;AAClB,UAAM,IAAIZ,OAAOO,KAAX,CAAiB,4BAAjB,EAA+C,sBAA/C,EAAuE,EAAEC,QAAQ,iCAAV,EAAvE,CAAN;AACA;AACDK,cAAWC,MAAX,CAAkBC,aAAlB,CAAgCQ,qCAAhC,CAAsEX,aAAaM,GAAnF,EAAwFb,KAAxF;AACA,UAAO,IAAP;AACA;;AAPD;AAAA;AAzCc,CAAf,iH;;;;;;;;;;;ACAAQ,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCE,8BAAhC,GAAiE,UAASC,GAAT,EAAcM,oBAAd,EAAoC;AACpG,KAAMC,QAAQ;AACbP,OAAKA;AADQ,EAAd;;AAIA,KAAMQ,SAAS;AACdC,QAAM;AACLH,yBAAsBA;AADjB;AADQ,EAAf;;AAMA,QAAO,KAAKE,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcAb,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCQ,qCAAhC,GAAwE,UAASL,GAAT,EAAcb,KAAd,EAAqB;AAC5F,KAAMoB,QAAQ;AACbP,OAAKA;AADQ,EAAd;;AAIA,KAAMQ,SAAS;AACdC,QAAM;AACLC,gCAA6BvB,QAAQ;AADhC;AADQ,EAAf;;AAMA,QAAO,KAAKqB,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcAb,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCI,iCAAhC,GAAoE,UAASD,GAAT,EAAcW,uBAAd,EAAuC;AAC1G,KAAMJ,QAAQ;AACbP,OAAKA;AADQ,EAAd;;AAIA,KAAMQ,SAAS;AACdC,QAAM;AACLE,4BAAyBA;AADpB;AADQ,EAAf;;AAMA,QAAO,KAAKH,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcAb,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCK,4BAAhC,GAA+D,UAASF,GAAT,EAAcY,kBAAd,EAAkC;AAChG,KAAML,QAAQ;AACbP,OAAKA;AADQ,EAAd;;AAIA,KAAMQ,SAAS;AACdC,QAAM;AACLG,uBAAoBA;AADf;AADQ,EAAf;;AAMA,QAAO,KAAKJ,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcAb,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCM,qBAAhC,GAAwD,UAASH,GAAT,EAAca,WAAd,EAA2B;AAClF,KAAMN,QAAQ;AACbP,OAAKA;AADQ,EAAd;;AAIA,KAAMQ,SAAS;AACdC,QAAM;AACLI;AADK;AADQ,EAAf;;AAMA,QAAO,KAAKL,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcAb,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCiB,oCAAhC,GAAuE,UAASC,MAAT,EAAiB;AACvF,KAAMR,QAAQ;AACbtB,OAAK8B,MADQ;AAEbT,wBAAsB;AAFT,EAAd;;AAKA,QAAO,KAAKU,IAAL,CAAUT,KAAV,CAAP;AACA,CAPD;;AASAZ,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCoB,kCAAhC,GAAqE,UAASF,MAAT,EAAiB;AACrF,KAAMR,QAAQ;AACbtB,OAAK8B,MADQ;AAEbT,wBAAsB;AAFT,EAAd;;AAKA,QAAO,KAAKU,IAAL,CAAUT,KAAV,CAAP;AACA,CAPD;;AASAZ,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCqB,mCAAhC,GAAsE,UAASH,MAAT,EAAiB;AACtF,KAAMR,QAAQ;AACbtB,OAAK8B,MADQ;AAEbJ,2BAAyB;AAFZ,EAAd;;AAKA,QAAO,KAAKK,IAAL,CAAUT,KAAV,CAAP;AACA,CAPD;;AASAZ,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCsB,iCAAhC,GAAoE,UAASJ,MAAT,EAAiB;AACpF,KAAMR,QAAQ;AACbtB,OAAK8B,MADQ;AAEbJ,2BAAyB;AAFZ,EAAd;;AAKA,QAAO,KAAKK,IAAL,CAAUT,KAAV,CAAP;AACA,CAPD;;AASAZ,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCuB,iCAAhC,GAAoE,UAASL,MAAT,EAAiB;AACpF,KAAMR,QAAQ;AACbtB,OAAK8B,MADQ;AAEb,WAAS,EAACM,SAAS,IAAV,EAFI;AAGbC,OAAK,CACJ,EAAChB,sBAAsB,EAACe,SAAS,IAAV,EAAvB,EADI,EAEJ,EAACX,6BAA6B,EAACW,SAAS,IAAV,EAA9B,EAFI,EAGJ,EAACV,yBAAyB,EAACU,SAAS,IAAV,EAA1B,EAHI;AAHQ,EAAd;;AAUA,QAAO,KAAKL,IAAL,CAAUT,KAAV,CAAP;AACA,CAZD;;AAcAZ,WAAWC,MAAX,CAAkBC,aAAlB,CAAgC0B,yBAAhC,GAA4D,UAASR,MAAT,EAAiB;AAC5E,KAAIR,QAAQ;AACXtB,OAAK8B,MADM;AAEXH,sBAAoB;AACnBS,YAAS;AADU;AAFT,EAAZ;;AAOA,QAAO,KAAKL,IAAL,CAAUT,KAAV,EAAiB,EAAEiB,QAAQ,EAAEZ,oBAAoB,CAAtB,EAAyBa,GAAG,CAA5B,EAAV,EAAjB,CAAP;AACA,CATD,mH","file":"/packages/rocketchat_push-notifications.js","sourcesContent":["Meteor.methods({\n\tsaveNotificationSettings: function(rid, field, value) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tcheck(rid, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tif (['desktopNotifications', 'mobilePushNotifications', 'emailNotifications', 'unreadAlert'].indexOf(field) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tif (['all', 'mentions', 'nothing', 'default'].indexOf(value) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings value', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tswitch (field) {\n\t\t\tcase 'desktopNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateDesktopNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'mobilePushNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateMobilePushNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'emailNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateEmailNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'unreadAlert':\n\t\t\t\tRocketChat.models.Subscriptions.updateUnreadAlertById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tsaveDesktopNotificationDuration: function(rid, value) {\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveDesktopNotificationDuration' });\n\t\t}\n\t\tRocketChat.models.Subscriptions.updateDesktopNotificationDurationById(subscription._id, value);\n\t\treturn true;\n\t}\n});\n","RocketChat.models.Subscriptions.updateDesktopNotificationsById = function(_id, desktopNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotifications: desktopNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDesktopNotificationDurationById = function(_id, value) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotificationDuration: value - 0\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateMobilePushNotificationsById = function(_id, mobilePushNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tmobilePushNotifications: mobilePushNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateEmailNotificationsById = function(_id, emailNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\temailNotifications: emailNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateUnreadAlertById = function(_id, unreadAlert) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tunreadAlert\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findNotificationPreferencesByRoom = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\t'u._id': {$exists: true},\n\t\t$or: [\n\t\t\t{desktopNotifications: {$exists: true}},\n\t\t\t{desktopNotificationDuration: {$exists: true}},\n\t\t\t{mobilePushNotifications: {$exists: true}}\n\t\t]\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findWithSendEmailByRoomId = function(roomId) {\n\tvar query = {\n\t\trid: roomId,\n\t\temailNotifications: {\n\t\t\t$exists: true\n\t\t}\n\t};\n\n\treturn this.find(query, { fields: { emailNotifications: 1, u: 1 } });\n};\n"]}