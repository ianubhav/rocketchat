{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:slackbridge/logger.js","meteor://ðŸ’»app/packages/rocketchat:slackbridge/settings.js","meteor://ðŸ’»app/packages/rocketchat:slackbridge/slackbridge.js","meteor://ðŸ’»app/packages/rocketchat:slackbridge/slashcommand/slackbridge_import.server.js"],"names":["logger","Logger","sections","connection","events","Meteor","startup","RocketChat","settings","addGroup","add","type","i18nLabel","enableQuery","_id","value","i18nDescription","SlackBridge","util","Npm","require","slackClient","apiToken","get","aliasFormat","excludeBotnames","rtm","connected","userTags","channelMap","key","disconnect","connect","info","RtmClient","start","setEvents","callbacks","slackBridgeOut","bind","priority","LOW","remove","populateChannelMap","convertSlackMessageToRocketChat","message","_","isEmpty","replace","match","userId","findUser","addUser","slack","rocket","findChannel","channelId","debug","models","Rooms","findOneByImportId","addChannel","hasRetried","data","isGroup","charAt","HTTP","params","token","channel","ok","channelData","group","existingRoom","findOneByName","name","is_general","rocketId","update","$addToSet","importIds","id","users","members","member","creator","user","username","push","error","createRoom","rid","e","_sleepForMs","console","log","roomUpdate","ts","Date","created","lastSetTopic","topic","last_set","purpose","$set","family","findOneById","Users","userData","isBot","is_bot","email","profile","existingUser","findOneByEmailAddress","findOneByUsername","newUser","password","Random","Accounts","createUser","userUpdate","utcOffset","tz_offset","roles","real_name","deleted","url","image_original","image_512","setUserAvatar","addUserToDefaultChannels","bot_id","$each","addAlias","msgObj","alias","format","sendMessage","room","msgDataDefaults","importing","subtype","processSubtypedMessage","msg","text","u","extend","edited","ets","parseInt","split","fields","pinned_to","indexOf","pinned","pinnedAt","now","pinnedBy","pick","saveMessage","previous_message","code","undefined","bot","attachments","icons","emoji","editMessage","Messages","deleteMessage","createUserJoinWithRoomIdAndUser","imported","addUserToRoom","inviter","createUserAddedWithRoomIdAndUser","createUserLeaveWithRoomIdAndUser","removeUserFromRoom","createRoomSettingsChangedWithTypeRoomIdMessageAndUser","saveRoomTopic","createRoomRenamedWithRoomIdRoomNameAndUser","saveRoomName","archiveRoom","unarchiveRoom","file","url_private_download","details","message_id","size","mimetype","uploadFile","t","author_subname","getAvatarUrlFromUsername","setPinnedByIdAndUserId","channel_id","updateMessage","fileUrl","timeStamp","requestModule","test","parsedUrl","parse","headers","bindEnvironment","stream","fileId","fileStore","create","write","err","Error","absoluteUrl","attachment","title","title_link","image_url","image_type","image_size","image_dimensions","identify","audio_url","audio_type","audio_size","video_url","video_type","video_size","groupable","CLIENT_EVENTS","on","RTM","AUTHENTICATED","UNABLE_TO_RTM_START","DISCONNECT","RTM_EVENTS","MESSAGE","CHANNEL_CREATED","CHANNEL_JOINED","CHANNEL_LEFT","CHANNEL_DELETED","CHANNEL_RENAME","GROUP_JOINED","GROUP_LEFT","GROUP_RENAME","TEAM_JOIN","findSlackChannel","response","isArray","channels","length","is_member","groups","importFromHistory","options","messages","latest","reverse","has_more","copyChannelInfo","topic_last_set","topic_creator","copyPins","items","pin","importMessages","callback","rocketchat_room","results","oldest","slack_room","outChannels","keys","pluck","postMessage","icon_url","link_names","post","SlackBridgeImport","command","item","Match","String","findOne","msgStream","emit","TAPi18n","__","postProcess","sprintf","language","slashCommands"],"mappings":"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","file":"/packages/rocketchat_slackbridge.js","sourcesContent":["/* globals logger:true */\n/* exported logger */\n\nlogger = new Logger('SlackBridge', {\n\tsections: {\n\t\tconnection: 'Connection',\n\t\tevents: 'Events',\n\t\tclass: 'Class'\n\t}\n});\n","Meteor.startup(function() {\n\tRocketChat.settings.addGroup('SlackBridge', function() {\n\t\tthis.add('SlackBridge_Enabled', false, {\n\t\t\ttype: 'boolean',\n\t\t\ti18nLabel: 'Enabled',\n\t\t\tpublic: true\n\t\t});\n\n\t\tthis.add('SlackBridge_APIToken', '', {\n\t\t\ttype: 'string',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'SlackBridge_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'API_Token'\n\t\t});\n\n\t\tthis.add('SlackBridge_AliasFormat', '', {\n\t\t\ttype: 'string',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'SlackBridge_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'Alias_Format',\n\t\t\ti18nDescription: 'Alias_Format_Description'\n\t\t});\n\n\t\tthis.add('SlackBridge_ExcludeBotnames', '', {\n\t\t\ttype: 'string',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'SlackBridge_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'Exclude_Botnames',\n\t\t\ti18nDescription: 'Exclude_Botnames_Description'\n\t\t});\n\n\t\tthis.add('SlackBridge_Out_Enabled', false, {\n\t\t\ttype: 'boolean',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'SlackBridge_Enabled',\n\t\t\t\tvalue: true\n\t\t\t}\n\t\t});\n\n\t\tthis.add('SlackBridge_Out_All', false, {\n\t\t\ttype: 'boolean',\n\t\t\tenableQuery: [{\n\t\t\t\t_id: 'SlackBridge_Enabled',\n\t\t\t\tvalue: true\n\t\t\t}, {\n\t\t\t\t_id: 'SlackBridge_Out_Enabled',\n\t\t\t\tvalue: true\n\t\t\t}]\n\t\t});\n\n\t\tthis.add('SlackBridge_Out_Channels', '', {\n\t\t\ttype: 'roomPick',\n\t\t\tenableQuery: [{\n\t\t\t\t_id: 'SlackBridge_Enabled',\n\t\t\t\tvalue: true\n\t\t\t}, {\n\t\t\t\t_id: 'SlackBridge_Out_Enabled',\n\t\t\t\tvalue: true\n\t\t\t}, {\n\t\t\t\t_id: 'SlackBridge_Out_All',\n\t\t\t\tvalue: false\n\t\t\t}]\n\t\t});\n\t});\n});\n","/* globals logger */\n\nclass SlackBridge {\n\tconstructor() {\n\t\tthis.util = Npm.require('util');\n\t\tthis.slackClient = Npm.require('slack-client');\n\t\tthis.apiToken = RocketChat.settings.get('SlackBridge_APIToken');\n\t\tthis.aliasFormat = RocketChat.settings.get('SlackBridge_AliasFormat');\n\t\tthis.excludeBotnames = RocketChat.settings.get('SlackBridge_Botnames');\n\t\tthis.rtm = {};\n\t\tthis.connected = false;\n\t\tthis.userTags = {};\n\t\tthis.channelMap = {};\n\n\t\tRocketChat.settings.get('SlackBridge_APIToken', (key, value) => {\n\t\t\tthis.apiToken = value;\n\t\t\tif (this.connected) {\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.connect();\n\t\t\t} else if (RocketChat.settings.get('SlackBridge_Enabled')) {\n\t\t\t\tthis.connect();\n\t\t\t}\n\t\t});\n\n\t\tRocketChat.settings.get('SlackBridge_Enabled', (key, value) => {\n\t\t\tif (value && this.apiToken) {\n\t\t\t\tthis.connect();\n\t\t\t} else {\n\t\t\t\tthis.disconnect();\n\t\t\t}\n\t\t});\n\n\t\tRocketChat.settings.get('SlackBridge_AliasFormat', (key, value) => {\n\t\t\tthis.aliasFormat = value;\n\t\t});\n\n\t\tRocketChat.settings.get('SlackBridge_ExcludeBotnames', (key, value) => {\n\t\t\tthis.excludeBotnames = value;\n\t\t});\n\t}\n\n\tconnect() {\n\t\tif (this.connected === false) {\n\t\t\tthis.connected = true;\n\t\t\tlogger.connection.info('Connecting via token: ', this.apiToken);\n\t\t\tvar RtmClient = this.slackClient.RtmClient;\n\t\t\tthis.rtm = new RtmClient(this.apiToken);\n\t\t\tthis.rtm.start();\n\t\t\tthis.setEvents();\n\t\t\tRocketChat.settings.get('SlackBridge_Out_Enabled', (key, value) => {\n\t\t\t\tif (value) {\n\t\t\t\t\tRocketChat.callbacks.add('afterSaveMessage', this.slackBridgeOut.bind(this), RocketChat.callbacks.priority.LOW, 'SlackBridge_Out');\n\t\t\t\t} else {\n\t\t\t\t\tRocketChat.callbacks.remove('afterSaveMessage', 'SlackBridge_Out');\n\t\t\t\t}\n\t\t\t});\n\t\t\tMeteor.startup(() => {\n\t\t\t\tthis.populateChannelMap(); // If run outside of Meteor.startup, HTTP is not defined\n\t\t\t});\n\t\t}\n\t}\n\n\tdisconnect() {\n\t\tif (this.connected === true) {\n\t\t\tthis.connected = false;\n\t\t\tthis.rtm.disconnect && this.rtm.disconnect();\n\t\t\tlogger.connection.info('Disconnected');\n\t\t\tRocketChat.callbacks.remove('afterSaveMessage', 'SlackBridge_Out');\n\t\t}\n\t}\n\n\tconvertSlackMessageToRocketChat(message) {\n\t\tif (!_.isEmpty(message)) {\n\t\t\tmessage = message.replace(/<!everyone>/g, '@all');\n\t\t\tmessage = message.replace(/<!channel>/g, '@all');\n\t\t\tmessage = message.replace(/&gt;/g, '<');\n\t\t\tmessage = message.replace(/&lt;/g, '>');\n\t\t\tmessage = message.replace(/&amp;/g, '&');\n\t\t\tmessage = message.replace(/:simple_smile:/g, ':smile:');\n\t\t\tmessage = message.replace(/:memo:/g, ':pencil:');\n\t\t\tmessage = message.replace(/:piggy:/g, ':pig:');\n\t\t\tmessage = message.replace(/:uk:/g, ':gb:');\n\t\t\tmessage = message.replace(/<(http[s]?:[^>]*)>/g, '$1');\n\n\t\t\tmessage.replace(/(?:<@)([a-zA-Z0-9]+)(?:\\|.+)?(?:>)/g, (match, userId) => {\n\t\t\t\tif (!this.userTags[userId]) {\n\t\t\t\t\tthis.findUser(userId) || this.addUser(userId); // This adds userTags for the userId\n\t\t\t\t}\n\t\t\t\tlet userTags = this.userTags[userId];\n\t\t\t\tif (userTags) {\n\t\t\t\t\tmessage = message.replace(userTags.slack, userTags.rocket);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tmessage = '';\n\t\t}\n\t\treturn message;\n\t}\n\n\tfindChannel(channelId) {\n\t\tlogger.class.debug('Searching for Rocket.Chat channel', channelId);\n\t\treturn RocketChat.models.Rooms.findOneByImportId(channelId);\n\t}\n\n\taddChannel(channelId, hasRetried = false) {\n\t\tlogger.class.debug('Adding channel from Slack', channelId);\n\t\tlet data = null;\n\t\tlet isGroup = false;\n\t\tif (channelId.charAt(0) === 'C') {\n\t\t\tdata = HTTP.get('https://slack.com/api/channels.info', { params: { token: this.apiToken, channel: channelId } });\n\t\t} else if (channelId.charAt(0) === 'G') {\n\t\t\tdata = HTTP.get('https://slack.com/api/groups.info', { params: { token: this.apiToken, channel: channelId } });\n\t\t\tisGroup = true;\n\t\t}\n\t\tif (data && data.data && data.data.ok === true) {\n\t\t\tlet channelData = isGroup ? data.data.group : data.data.channel;\n\t\t\tlet existingRoom = RocketChat.models.Rooms.findOneByName(channelData.name);\n\n\t\t\t// If the room exists, make sure we have its id in importIds\n\t\t\tif (existingRoom || channelData.is_general) {\n\t\t\t\tchannelData.rocketId = channelData.is_general ? 'GENERAL' : existingRoom._id;\n\t\t\t\tRocketChat.models.Rooms.update({ _id: channelData.rocketId }, { $addToSet: { importIds: channelData.id } });\n\t\t\t} else {\n\t\t\t\tlet users = [];\n\t\t\t\tfor (let member of channelData.members) {\n\t\t\t\t\tif (member !== channelData.creator) {\n\t\t\t\t\t\tlet user = this.findUser(member) || this.addUser(member);\n\t\t\t\t\t\tif (user && user.username) {\n\t\t\t\t\t\t\tusers.push(user.username);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet creator = channelData.creator ? this.findUser(channelData.creator) || this.addUser(channelData.creator) : null;\n\t\t\t\tif (!creator) {\n\t\t\t\t\tlogger.class.error('Could not fetch room creator information', channelData.creator);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tlet channel = RocketChat.createRoom(isGroup ? 'p' : 'c', channelData.name, creator.username, users);\n\t\t\t\t\tchannelData.rocketId = channel.rid;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (!hasRetried) {\n\t\t\t\t\t\tlogger.class.debug('Error adding channel from Slack. Will retry in 1s.', e.message);\n\t\t\t\t\t\t// If first time trying to create channel fails, could be because of multiple messages received at the same time. Try again once after 1s.\n\t\t\t\t\t\tMeteor._sleepForMs(1000);\n\t\t\t\t\t\treturn this.findChannel(channelId) || this.addChannel(channelId, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(e.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet roomUpdate = {\n\t\t\t\t\tts: new Date(channelData.created * 1000)\n\t\t\t\t};\n\t\t\t\tlet lastSetTopic = 0;\n\t\t\t\tif (!_.isEmpty(channelData.topic && channelData.topic.value)) {\n\t\t\t\t\troomUpdate.topic = channelData.topic.value;\n\t\t\t\t\tlastSetTopic = channelData.topic.last_set;\n\t\t\t\t}\n\t\t\t\tif (!_.isEmpty(channelData.purpose && channelData.purpose.value) && channelData.purpose.last_set > lastSetTopic) {\n\t\t\t\t\troomUpdate.topic = channelData.purpose.value;\n\t\t\t\t}\n\n\t\t\t\tRocketChat.models.Rooms.update({ _id: channelData.rocketId }, { $set: roomUpdate, $addToSet: { importIds: channelData.id } });\n\t\t\t\tthis.channelMap[channelData.rocketId] = { id: channelId, family: channelId.charAt(0) === 'C' ? 'channels' : 'groups' };\n\t\t\t}\n\t\t\treturn RocketChat.models.Rooms.findOneById(channelData.rocketId);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tfindUser(userId) {\n\t\tlogger.class.debug('Searching for Rocket.Chat user', userId);\n\t\tlet user = RocketChat.models.Users.findOneByImportId(userId);\n\t\tif (user && !this.userTags[userId]) {\n\t\t\tthis.userTags[userId] = { slack: `<@${userId}>`, rocket: `@${user.username}` };\n\t\t}\n\t\treturn user;\n\t}\n\n\taddUser(userId) {\n\t\tlogger.class.debug('Adding user from Slack', userId);\n\t\tlet data = HTTP.get('https://slack.com/api/users.info', { params: { token: this.apiToken, user: userId } });\n\t\tif (data && data.data && data.data.ok === true && data.data.user) {\n\t\t\tlet userData = data.data.user;\n\t\t\tlet isBot = userData.is_bot === true;\n\t\t\tlet email = userData.profile && userData.profile.email || '';\n\t\t\tlet existingUser;\n\t\t\tif (!isBot) {\n\t\t\t\texistingUser = RocketChat.models.Users.findOneByEmailAddress(email) || RocketChat.models.Users.findOneByUsername(userData.name);\n\t\t\t} else {\n\t\t\t\texistingUser = RocketChat.models.Users.findOneByUsername(userData.name);\n\t\t\t}\n\n\t\t\tif (existingUser) {\n\t\t\t\tuserData.rocketId = existingUser._id;\n\t\t\t\tuserData.name = existingUser.username;\n\t\t\t} else {\n\t\t\t\tlet newUser = { password: Random.id() };\n\t\t\t\tif (isBot || !email) {\n\t\t\t\t\tnewUser.username = userData.name;\n\t\t\t\t} else {\n\t\t\t\t\tnewUser.email = email;\n\t\t\t\t}\n\t\t\t\tuserData.rocketId = Accounts.createUser(newUser);\n\t\t\t\tlet userUpdate = {\n\t\t\t\t\tusername: userData.name,\n\t\t\t\t\tutcOffset: userData.tz_offset / 3600, // Slack's is -18000 which translates to Rocket.Chat's after dividing by 3600,\n\t\t\t\t\troles: isBot ? [ 'bot' ] : [ 'user' ]\n\t\t\t\t};\n\n\t\t\t\tif (userData.profile && userData.profile.real_name) {\n\t\t\t\t\tuserUpdate['name'] = userData.profile.real_name;\n\t\t\t\t}\n\n\t\t\t\tif (userData.deleted) {\n\t\t\t\t\tuserUpdate['active'] = false;\n\t\t\t\t\tuserUpdate['services.resume.loginTokens'] = [];\n\t\t\t\t}\n\n\t\t\t\tRocketChat.models.Users.update({ _id: userData.rocketId }, { $set: userUpdate });\n\n\t\t\t\tlet user = RocketChat.models.Users.findOneById(userData.rocketId);\n\n\t\t\t\tlet url = null;\n\t\t\t\tif (userData.profile) {\n\t\t\t\t\tif (userData.profile.image_original) {\n\t\t\t\t\t\turl = userData.profile.image_original;\n\t\t\t\t\t} else if (userData.profile.image_512) {\n\t\t\t\t\t\turl = userData.profile.image_512;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (url) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tRocketChat.setUserAvatar(user, url, null, 'url');\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlogger.class.debug('Error setting user avatar', error.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tRocketChat.addUserToDefaultChannels(user, true);\n\t\t\t}\n\n\t\t\tlet importIds = [ userData.id ];\n\t\t\tif (isBot && userData.profile && userData.profile.bot_id) {\n\t\t\t\timportIds.push(userData.profile.bot_id);\n\t\t\t}\n\t\t\tRocketChat.models.Users.update({ _id: userData.rocketId }, { $addToSet: { importIds: { $each: importIds } } });\n\t\t\tif (!this.userTags[userId]) {\n\t\t\t\tthis.userTags[userId] = { slack: `<@${userId}>`, rocket: `@${userData.name}` };\n\t\t\t}\n\t\t\tlogger.class.debug('User: ', userData.rocketId);\n\t\t\treturn RocketChat.models.Users.findOneById(userData.rocketId);\n\t\t}\n\t\tlogger.class.debug('User not added');\n\t\treturn;\n\t}\n\n\taddAlias(username, msgObj) {\n\t\tif (this.aliasFormat) {\n\t\t\tvar alias = this.util.format(this.aliasFormat, username);\n\n\t\t\tif (alias !== username) {\n\t\t\t\tmsgObj.alias = alias;\n\t\t\t}\n\t\t}\n\n\t\treturn msgObj;\n\t}\n\n\tsendMessage(room, user, message, msgDataDefaults, importing) {\n\t\tif (message.type === 'message') {\n\t\t\tlet msgObj = {};\n\t\t\tif (!_.isEmpty(message.subtype)) {\n\t\t\t\tmsgObj = this.processSubtypedMessage(room, user, message, importing);\n\t\t\t\tif (!msgObj) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmsgObj = {\n\t\t\t\t\tmsg: this.convertSlackMessageToRocketChat(message.text),\n\t\t\t\t\trid: room._id,\n\t\t\t\t\tu: {\n\t\t\t\t\t\t_id: user._id,\n\t\t\t\t\t\tusername: user.username\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.addAlias(user.username, msgObj);\n\t\t\t}\n\t\t\t_.extend(msgObj, msgDataDefaults);\n\t\t\tif (message.edited) {\n\t\t\t\tmsgObj.ets = new Date(parseInt(message.edited.ts.split('.')[0]) * 1000);\n\t\t\t}\n\t\t\tif (message.subtype === 'bot_message') {\n\t\t\t\tuser = RocketChat.models.Users.findOneById('rocket.cat', { fields: { username: 1 } });\n\t\t\t}\n\n\t\t\tif (message.pinned_to && message.pinned_to.indexOf(message.channel) !== -1) {\n\t\t\t\tmsgObj.pinned = true;\n\t\t\t\tmsgObj.pinnedAt = Date.now;\n\t\t\t\tmsgObj.pinnedBy = _.pick(user, '_id', 'username');\n\t\t\t}\n\t\t\tRocketChat.sendMessage(user, msgObj, room, true);\n\t\t}\n\t}\n\n\tsaveMessage(message, importing) {\n\t\tlet channel = message.channel ? this.findChannel(message.channel) || this.addChannel(message.channel) : null;\n\t\tlet user = null;\n\t\tif (message.subtype === 'message_deleted' || message.subtype === 'message_changed') {\n\t\t\tuser = message.previous_message.user ? this.findUser(message.previous_message.user) || this.addUser(message.previous_message.user) : null;\n\t\t} else if (message.subtype === 'bot_message') {\n\t\t\tuser = RocketChat.models.Users.findOneById('rocket.cat', { fields: { username: 1 } });\n\t\t} else {\n\t\t\tuser = message.user ? this.findUser(message.user) || this.addUser(message.user) : null;\n\t\t}\n\t\tif (channel && user) {\n\t\t\tlet msgDataDefaults = {\n\t\t\t\t_id: `slack-${message.channel}-${message.ts.replace(/\\./g, '-')}`,\n\t\t\t\tts: new Date(parseInt(message.ts.split('.')[0]) * 1000)\n\t\t\t};\n\t\t\tif (importing) {\n\t\t\t\tmsgDataDefaults['imported'] = 'slackbridge';\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tthis.sendMessage(channel, user, message, msgDataDefaults, importing);\n\t\t\t} catch (e) {\n\t\t\t\t// http://www.mongodb.org/about/contributors/error-codes/\n\t\t\t\t// 11000 == duplicate key error\n\t\t\t\tif (e.name === 'MongoError' && e.code === 11000) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessSubtypedMessage(room, user, message, importing) {\n\t\tlet msgObj = null;\n\t\tswitch (message.subtype) {\n\t\t\tcase 'bot_message':\n\t\t\t\tif (message.username !== undefined && this.excludeBotnames && message.username.match(this.excludeBotnames)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmsgObj = {\n\t\t\t\t\tmsg: this.convertSlackMessageToRocketChat(message.text),\n\t\t\t\t\trid: room._id,\n\t\t\t\t\tbot: true,\n\t\t\t\t\tattachments: message.attachments,\n\t\t\t\t\tusername: message.username || message.bot_id\n\t\t\t\t};\n\t\t\t\tthis.addAlias(message.username || message.bot_id, msgObj);\n\t\t\t\tif (message.icons) {\n\t\t\t\t\tmsgObj.emoji = message.icons.emoji;\n\t\t\t\t}\n\t\t\t\treturn msgObj;\n\t\t\tcase 'me_message':\n\t\t\t\treturn this.addAlias(user.username, {\n\t\t\t\t\tmsg: `_${this.convertSlackMessageToRocketChat(message.text)}_`\n\t\t\t\t});\n\t\t\tcase 'message_changed':\n\t\t\t\tthis.editMessage(room, user, message);\n\t\t\t\treturn;\n\t\t\tcase 'message_deleted':\n\t\t\t\tif (message.previous_message) {\n\t\t\t\t\tlet _id = `slack-${message.channel}-${message.previous_message.ts.replace(/\\./g, '-')}`;\n\t\t\t\t\tmsgObj = RocketChat.models.Messages.findOneById(_id);\n\t\t\t\t\tif (msgObj) {\n\t\t\t\t\t\tRocketChat.deleteMessage(msgObj, user);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'channel_join':\n\t\t\t\tif (importing) {\n\t\t\t\t\tRocketChat.models.Messages.createUserJoinWithRoomIdAndUser(room._id, user, { ts: new Date(parseInt(message.ts.split('.')[0]) * 1000), imported: 'slackbridge' });\n\t\t\t\t} else {\n\t\t\t\t\tRocketChat.addUserToRoom(room._id, user);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'group_join':\n\t\t\t\tif (message.inviter) {\n\t\t\t\t\tlet inviter = message.inviter ? this.findUser(message.inviter) || this.addUser(message.inviter) : null;\n\t\t\t\t\tif (importing) {\n\t\t\t\t\t\tRocketChat.models.Messages.createUserAddedWithRoomIdAndUser(room._id, user, {\n\t\t\t\t\t\t\tts: new Date(parseInt(message.ts.split('.')[0]) * 1000),\n\t\t\t\t\t\t\tu: {\n\t\t\t\t\t\t\t\t_id: inviter._id,\n\t\t\t\t\t\t\t\tusername: inviter.username\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\timported: 'slackbridge'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tRocketChat.addUserToRoom(room._id, user, inviter);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'channel_leave':\n\t\t\tcase 'group_leave':\n\t\t\t\tif (importing) {\n\t\t\t\t\tRocketChat.models.Messages.createUserLeaveWithRoomIdAndUser(room._id, user, {\n\t\t\t\t\t\tts: new Date(parseInt(message.ts.split('.')[0]) * 1000),\n\t\t\t\t\t\timported: 'slackbridge'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tRocketChat.removeUserFromRoom(room._id, user);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'channel_topic':\n\t\t\tcase 'group_topic':\n\t\t\t\tif (importing) {\n\t\t\t\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_topic', room._id, message.topic, user, { ts: new Date(parseInt(message.ts.split('.')[0]) * 1000), imported: 'slackbridge' });\n\t\t\t\t} else {\n\t\t\t\t\tRocketChat.saveRoomTopic(room._id, message.topic, user, false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'channel_purpose':\n\t\t\tcase 'group_purpose':\n\t\t\t\tif (importing) {\n\t\t\t\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_topic', room._id, message.purpose, user, { ts: new Date(parseInt(message.ts.split('.')[0]) * 1000), imported: 'slackbridge' });\n\t\t\t\t} else {\n\t\t\t\t\tRocketChat.saveRoomTopic(room._id, message.purpose, user, false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'channel_name':\n\t\t\tcase 'group_name':\n\t\t\t\tif (importing) {\n\t\t\t\t\tRocketChat.models.Messages.createRoomRenamedWithRoomIdRoomNameAndUser(room._id, message.name, user, { ts: new Date(parseInt(message.ts.split('.')[0]) * 1000), imported: 'slackbridge' });\n\t\t\t\t} else {\n\t\t\t\t\tRocketChat.saveRoomName(room._id, message.name, user, false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'channel_archive':\n\t\t\tcase 'group_archive':\n\t\t\t\tif (!importing) {\n\t\t\t\t\tRocketChat.archiveRoom(room);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'channel_unarchive':\n\t\t\tcase 'group_unarchive':\n\t\t\t\tif (!importing) {\n\t\t\t\t\tRocketChat.unarchiveRoom(room);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'file_share':\n\t\t\t\tif (message.file && message.file.url_private_download !== undefined) {\n\t\t\t\t\tlet details = {\n\t\t\t\t\t\tmessage_id: `slack-${message.ts.replace(/\\./g, '-')}`,\n\t\t\t\t\t\tname: message.file.name,\n\t\t\t\t\t\tsize: message.file.size,\n\t\t\t\t\t\ttype: message.file.mimetype,\n\t\t\t\t\t\trid: room._id\n\t\t\t\t\t};\n\t\t\t\t\treturn this.uploadFile(details, message.file.url_private_download, user, room, new Date(parseInt(message.ts.split('.')[0]) * 1000), importing);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'file_comment':\n\t\t\t\tlogger.class.error('File comment not implemented');\n\t\t\t\treturn;\n\t\t\tcase 'file_mention':\n\t\t\t\tlogger.class.error('File mentioned not implemented');\n\t\t\t\treturn;\n\t\t\tcase 'pinned_item':\n\t\t\t\tif (message.attachments && message.attachments[0] && message.attachments[0].text) {\n\t\t\t\t\tmsgObj = {\n\t\t\t\t\t\trid: room._id,\n\t\t\t\t\t\tt: 'message_pinned',\n\t\t\t\t\t\tmsg: '',\n\t\t\t\t\t\tu: {\n\t\t\t\t\t\t\t_id: user._id,\n\t\t\t\t\t\t\tusername: user.username\n\t\t\t\t\t\t},\n\t\t\t\t\t\tattachments: [{\n\t\t\t\t\t\t\t'text' : this.convertSlackMessageToRocketChat(message.attachments[0].text),\n\t\t\t\t\t\t\t'author_name' : message.attachments[0].author_subname,\n\t\t\t\t\t\t\t'author_icon' : getAvatarUrlFromUsername(message.attachments[0].author_subname),\n\t\t\t\t\t\t\t'ts' : new Date(parseInt(message.attachments[0].ts.split('.')[0]) * 1000)\n\t\t\t\t\t\t}]\n\t\t\t\t\t};\n\n\t\t\t\t\tif (!importing) {\n\t\t\t\t\t\tRocketChat.models.Messages.setPinnedByIdAndUserId(`slack-${message.attachments[0].channel_id}-${message.attachments[0].ts.replace(/\\./g, '-')}`, msgObj.u, true, new Date(parseInt(message.ts.split('.')[0]) * 1000));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn msgObj;\n\t\t\t\t} else {\n\t\t\t\t\tlogger.class.error('Pinned item with no attachment');\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'unpinned_item':\n\t\t\t\tlogger.class.error('Unpinned item not implemented');\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t* Edits a message\n\t**/\n\teditMessage(room, user, message) {\n\t\tlet msgObj = {\n\t\t\t//@TODO _id\n\t\t\t_id: `slack-${message.channel}-${message.message.ts.replace(/\\./g, '-')}`,\n\t\t\trid: room._id,\n\t\t\tmsg: this.convertSlackMessageToRocketChat(message.message.text)\n\t\t};\n\n\t\tRocketChat.updateMessage(msgObj, user);\n\t}\n\n\t/**\n\tUploads the file to the storage.\n\t@param [Object] details an object with details about the upload. name, size, type, and rid\n\t@param [String] fileUrl url of the file to download/import\n\t@param [Object] user the Rocket.Chat user\n\t@param [Object] room the Rocket.Chat room\n\t@param [Date] timeStamp the timestamp the file was uploaded\n\t**/\n\tuploadFile(details, fileUrl, user, room, timeStamp, importing) {\n\t\tlet url = Npm.require('url');\n\t\tlet requestModule = /https/i.test(fileUrl) ? Npm.require('https') : Npm.require('http');\n\t\tvar parsedUrl = url.parse(fileUrl, true);\n\t\tparsedUrl.headers = { 'Authorization': 'Bearer ' + this.apiToken };\n\t\trequestModule.get(parsedUrl, Meteor.bindEnvironment((stream) => {\n\t\t\tlet fileId = Meteor.fileStore.create(details);\n\t\t\tif (fileId) {\n\t\t\t\tMeteor.fileStore.write(stream, fileId, (err, file) => {\n\t\t\t\t\tconsole.log('fileStore.write', file);\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet url = file.url.replace(Meteor.absoluteUrl(), '/');\n\t\t\t\t\t\tlet attachment = {\n\t\t\t\t\t\t\ttitle: `File Uploaded: ${file.name}`,\n\t\t\t\t\t\t\ttitle_link: url\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (/^image\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\tattachment.image_url = url;\n\t\t\t\t\t\t\tattachment.image_type = file.type;\n\t\t\t\t\t\t\tattachment.image_size = file.size;\n\t\t\t\t\t\t\tattachment.image_dimensions = file.identify && file.identify.size;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^audio\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\tattachment.audio_url = url;\n\t\t\t\t\t\t\tattachment.audio_type = file.type;\n\t\t\t\t\t\t\tattachment.audio_size = file.size;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (/^video\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\tattachment.video_url = url;\n\t\t\t\t\t\t\tattachment.video_type = file.type;\n\t\t\t\t\t\t\tattachment.video_size = file.size;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet msg = {\n\t\t\t\t\t\t\trid: details.rid,\n\t\t\t\t\t\t\tts: timeStamp,\n\t\t\t\t\t\t\tmsg: '',\n\t\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\t\t_id: file._id\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgroupable: false,\n\t\t\t\t\t\t\tattachments: [attachment]\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (importing) {\n\t\t\t\t\t\t\tmsg.imported = 'slackbridge';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (details.message_id && (typeof details.message_id === 'string')) {\n\t\t\t\t\t\t\tmsg['_id'] = details.message_id;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn RocketChat.sendMessage(user, msg, room, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetEvents() {\n\t\tvar CLIENT_EVENTS = this.slackClient.CLIENT_EVENTS;\n\t\tthis.rtm.on(CLIENT_EVENTS.RTM.AUTHENTICATED, () => {\n\t\t\tlogger.connection.info('Connected');\n\t\t});\n\n\t\tthis.rtm.on(CLIENT_EVENTS.RTM.UNABLE_TO_RTM_START, () => {\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tthis.rtm.on(CLIENT_EVENTS.RTM.DISCONNECT, () => {\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tvar RTM_EVENTS = this.slackClient.RTM_EVENTS;\n\n\t\t/**\n\t\t* Event fired when someone messages a channel the bot is in\n\t\t* {\n\t\t*\ttype: 'message',\n\t\t* \tchannel: [channel_id],\n\t\t* \tuser: [user_id],\n\t\t* \ttext: [message],\n\t\t* \tts: [ts.milli],\n\t\t* \tteam: [team_id],\n\t\t* \tsubtype: [message_subtype],\n\t\t* \tinviter: [message_subtype = 'group_join|channel_join' -> user_id]\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.MESSAGE, Meteor.bindEnvironment((message) => {\n\t\t\tlogger.events.debug('MESSAGE: ', message);\n\t\t\tif (message) {\n\t\t\t\tthis.saveMessage(message);\n\t\t\t}\n\t\t}));\n\n\t\t/**\n\t\t* Event fired when someone creates a public channel\n\t\t* {\n\t\t*\ttype: 'channel_created',\n\t\t*\tchannel: {\n\t\t*\t\tid: [channel_id],\n\t\t*\t\tis_channel: true,\n\t\t*\t\tname: [channel_name],\n\t\t*\t\tcreated: [ts],\n\t\t*\t\tcreator: [user_id],\n\t\t*\t\tis_shared: false,\n\t\t*\t\tis_org_shared: false\n\t\t*\t},\n\t\t*\tevent_ts: [ts.milli]\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.CHANNEL_CREATED, Meteor.bindEnvironment(() => {}));\n\n\t\t/**\n\t\t* Event fired when the bot joins a public channel\n\t\t* {\n\t\t* \ttype: 'channel_joined',\n\t\t* \tchannel: {\n\t\t* \t\tid: [channel_id],\n\t\t* \t\tname: [channel_name],\n\t\t* \t\tis_channel: true,\n\t\t* \t\tcreated: [ts],\n\t\t* \t\tcreator: [user_id],\n\t\t* \t\tis_archived: false,\n\t\t* \t\tis_general: false,\n\t\t* \t\tis_member: true,\n\t\t* \t\tlast_read: [ts.milli],\n\t\t* \t\tlatest: [message_obj],\n\t\t* \t\tunread_count: 0,\n\t\t* \t\tunread_count_display: 0,\n\t\t* \t\tmembers: [ user_ids ],\n\t\t* \t\ttopic: {\n\t\t* \t\t\tvalue: [channel_topic],\n\t\t* \t\t\tcreator: [user_id],\n\t\t* \t\t\tlast_set: 0\n\t\t* \t\t},\n\t\t* \t\tpurpose: {\n\t\t* \t\t\tvalue: [channel_purpose],\n\t\t* \t\t\tcreator: [user_id],\n\t\t* \t\t\tlast_set: 0\n\t\t* \t\t}\n\t\t* \t}\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.CHANNEL_JOINED, Meteor.bindEnvironment(() => {}));\n\n\t\t/**\n\t\t* Event fired when the bot leaves (or is removed from) a public channel\n\t\t* {\n\t\t* \ttype: 'channel_left',\n\t\t* \tchannel: [channel_id]\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.CHANNEL_LEFT, Meteor.bindEnvironment(() => {}));\n\n\t\t/**\n\t\t* Event fired when an archived channel is deleted by an admin\n\t\t* {\n\t\t* \ttype: 'channel_deleted',\n\t\t* \tchannel: [channel_id],\n\t\t*\tevent_ts: [ts.milli]\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.CHANNEL_DELETED, Meteor.bindEnvironment(() => {}));\n\n\t\t/**\n\t\t* Event fired when the channel has its name changed\n\t\t* {\n\t\t* \ttype: 'channel_rename',\n\t\t* \tchannel: {\n\t\t* \t\tid: [channel_id],\n\t\t* \t\tname: [channel_name],\n\t\t* \t\tis_channel: true,\n\t\t* \t\tcreated: [ts]\n\t\t* \t},\n\t\t*\tevent_ts: [ts.milli]\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.CHANNEL_RENAME, Meteor.bindEnvironment(() => {}));\n\n\t\t/**\n\t\t* Event fired when the bot joins a private channel\n\t\t* {\n\t\t* \ttype: 'group_joined',\n\t\t* \tchannel: {\n\t\t* \t\tid: [channel_id],\n\t\t* \t\tname: [channel_name],\n\t\t* \t\tis_group: true,\n\t\t* \t\tcreated: [ts],\n\t\t* \t\tcreator: [user_id],\n\t\t* \t\tis_archived: false,\n\t\t* \t\tis_mpim: false,\n\t\t* \t\tis_open: true,\n\t\t* \t\tlast_read: [ts.milli],\n\t\t* \t\tlatest: [message_obj],\n\t\t* \t\tunread_count: 0,\n\t\t* \t\tunread_count_display: 0,\n\t\t* \t\tmembers: [ user_ids ],\n\t\t* \t\ttopic: {\n\t\t* \t\t\tvalue: [channel_topic],\n\t\t* \t\t\tcreator: [user_id],\n\t\t* \t\t\tlast_set: 0\n\t\t* \t\t},\n\t\t* \t\tpurpose: {\n\t\t* \t\t\tvalue: [channel_purpose],\n\t\t* \t\t\tcreator: [user_id],\n\t\t* \t\t\tlast_set: 0\n\t\t* \t\t}\n\t\t* \t}\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.GROUP_JOINED, Meteor.bindEnvironment(() => {}));\n\n\t\t/**\n\t\t* Event fired when the bot leaves (or is removed from) a private channel\n\t\t* {\n\t\t* \ttype: 'group_left',\n\t\t* \tchannel: [channel_id]\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.GROUP_LEFT, Meteor.bindEnvironment(() => {}));\n\n\t\t/**\n\t\t* Event fired when the private channel has its name changed\n\t\t* {\n\t\t* \ttype: 'group_rename',\n\t\t* \tchannel: {\n\t\t* \t\tid: [channel_id],\n\t\t* \t\tname: [channel_name],\n\t\t* \t\tis_group: true,\n\t\t* \t\tcreated: [ts]\n\t\t* \t},\n\t\t*\tevent_ts: [ts.milli]\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.GROUP_RENAME, Meteor.bindEnvironment(() => {}));\n\n\t\t/**\n\t\t* Event fired when a new user joins the team\n\t\t* {\n\t\t* \ttype: 'team_join',\n\t\t* \tuser:\n\t\t* \t{\n\t\t* \t\tid: [user_id],\n\t\t* \t\tteam_id: [team_id],\n\t\t* \t\tname: [user_name],\n\t\t* \t\tdeleted: false,\n\t\t* \t\tstatus: null,\n\t\t* \t\tcolor: [color_code],\n\t\t* \t\treal_name: '',\n\t\t* \t\ttz: [timezone],\n\t\t* \t\ttz_label: [timezone_label],\n\t\t* \t\ttz_offset: [timezone_offset],\n\t\t* \t\tprofile:\n\t\t* \t\t{\n\t\t* \t\t\tavatar_hash: '',\n\t\t* \t\t\treal_name: '',\n\t\t* \t\t\treal_name_normalized: '',\n\t\t* \t\t\temail: '',\n\t\t* \t\t\timage_24: '',\n\t\t* \t\t\timage_32: '',\n\t\t* \t\t\timage_48: '',\n\t\t* \t\t\timage_72: '',\n\t\t* \t\t\timage_192: '',\n\t\t* \t\t\timage_512: '',\n\t\t* \t\t\tfields: null\n\t\t* \t\t},\n\t\t* \t\tis_admin: false,\n\t\t* \t\tis_owner: false,\n\t\t* \t\tis_primary_owner: false,\n\t\t* \t\tis_restricted: false,\n\t\t* \t\tis_ultra_restricted: false,\n\t\t* \t\tis_bot: false,\n\t\t* \t\tpresence: [user_presence]\n\t\t* \t},\n\t\t* \tcache_ts: [ts]\n\t\t* }\n\t\t**/\n\t\tthis.rtm.on(RTM_EVENTS.TEAM_JOIN, Meteor.bindEnvironment(() => {}));\n\t}\n\n\tfindSlackChannel(name) {\n\t\tlogger.class.debug('Searching for Slack channel or group', name);\n\t\tlet response = HTTP.get('https://slack.com/api/channels.list', { params: { token: this.apiToken } });\n\t\tif (response && response.data && _.isArray(response.data.channels) && response.data.channels.length > 0) {\n\t\t\tfor (let channel of response.data.channels) {\n\t\t\t\tif (channel.name === name && channel.is_member === true) {\n\t\t\t\t\treturn channel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresponse = HTTP.get('https://slack.com/api/groups.list', { params: { token: this.apiToken } });\n\t\tif (response && response.data && _.isArray(response.data.groups) && response.data.groups.length > 0) {\n\t\t\tfor (let group of response.data.groups) {\n\t\t\t\tif (group.name === name) {\n\t\t\t\t\treturn group;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\timportFromHistory(family, options) {\n\t\tlogger.class.debug('Importing messages history');\n\t\tlet response = HTTP.get('https://slack.com/api/' + family + '.history', { params: _.extend({ token: this.apiToken }, options) });\n\t\tif (response && response.data && _.isArray(response.data.messages) && response.data.messages.length > 0) {\n\t\t\tlet latest = 0;\n\t\t\tfor (let message of response.data.messages.reverse()) {\n\t\t\t\tlogger.class.debug('MESSAGE: ', message);\n\t\t\t\tif (!latest || message.ts > latest) {\n\t\t\t\t\tlatest = message.ts;\n\t\t\t\t}\n\t\t\t\tmessage.channel = options.channel;\n\t\t\t\tthis.saveMessage(message, true);\n\t\t\t}\n\t\t\treturn { has_more: response.data.has_more, ts: latest };\n\t\t}\n\t}\n\n\tcopyChannelInfo(rid, channelMap) {\n\t\tlogger.class.debug('Copying users from Slack channel to Rocket.Chat', channelMap.id, rid);\n\t\tlet response = HTTP.get('https://slack.com/api/' + channelMap.family + '.info', { params: { token: this.apiToken, channel: channelMap.id } });\n\t\tif (response && response.data) {\n\t\t\tlet data = channelMap.family === 'channels' ? response.data.channel : response.data.group;\n\t\t\tif (data && _.isArray(data.members) && data.members.length > 0) {\n\t\t\t\tfor (let member of data.members) {\n\t\t\t\t\tlet user = this.findUser(member) || this.addUser(member);\n\t\t\t\t\tif (user) {\n\t\t\t\t\t\tlogger.class.debug('Adding user to room', user.username, rid);\n\t\t\t\t\t\tRocketChat.addUserToRoom(rid, user, null, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet topic = '';\n\t\t\tlet topic_last_set = 0;\n\t\t\tlet topic_creator = null;\n\t\t\tif (data && data.topic && data.topic.value) {\n\t\t\t\ttopic = data.topic.value;\n\t\t\t\ttopic_last_set = data.topic.last_set;\n\t\t\t\ttopic_creator = data.topic.creator;\n\t\t\t}\n\n\t\t\tif (data && data.purpose && data.purpose.value) {\n\t\t\t\tif (topic_last_set) {\n\t\t\t\t\tif (topic_last_set < data.purpose.last_set) {\n\t\t\t\t\t\ttopic = data.purpose.topic;\n\t\t\t\t\t\ttopic_creator = data.purpose.creator;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttopic = data.purpose.topic;\n\t\t\t\t\ttopic_creator = data.purpose.creator;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (topic) {\n\t\t\t\tlet creator = this.findUser(topic_creator) || this.addUser(topic_creator);\n\t\t\t\tlogger.class.debug('Setting room topic', rid, topic, creator.username);\n\t\t\t\tRocketChat.saveRoomTopic(rid, topic, creator, false);\n\t\t\t}\n\t\t}\n\t}\n\n\tcopyPins(rid, channelMap) {\n\t\tlet response = HTTP.get('https://slack.com/api/pins.list', { params: { token: this.apiToken, channel: channelMap.id } });\n\t\tif (response && response.data && _.isArray(response.data.items) && response.data.items.length > 0) {\n\t\t\tfor (let pin of response.data.items) {\n\t\t\t\tif (pin.message) {\n\t\t\t\t\tlet user = this.findUser(pin.message.user);\n\t\t\t\t\tlet msgObj = {\n\t\t\t\t\t\trid: rid,\n\t\t\t\t\t\tt: 'message_pinned',\n\t\t\t\t\t\tmsg: '',\n\t\t\t\t\t\tu: {\n\t\t\t\t\t\t\t_id: user._id,\n\t\t\t\t\t\t\tusername: user.username\n\t\t\t\t\t\t},\n\t\t\t\t\t\tattachments: [{\n\t\t\t\t\t\t\t'text' : this.convertSlackMessageToRocketChat(pin.message.text),\n\t\t\t\t\t\t\t'author_name' : user.username,\n\t\t\t\t\t\t\t'author_icon' : getAvatarUrlFromUsername(user.username),\n\t\t\t\t\t\t\t'ts' : new Date(parseInt(pin.message.ts.split('.')[0]) * 1000)\n\t\t\t\t\t\t}]\n\t\t\t\t\t};\n\n\t\t\t\t\tRocketChat.models.Messages.setPinnedByIdAndUserId(`slack-${pin.channel}-${pin.message.ts.replace(/\\./g, '-')}`, msgObj.u, true, new Date(parseInt(pin.message.ts.split('.')[0]) * 1000));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\timportMessages(rid, callback) {\n\t\tlogger.class.info('importMessages: ', rid);\n\t\tlet rocketchat_room = RocketChat.models.Rooms.findOneById(rid);\n\t\tif (rocketchat_room) {\n\t\t\tif (this.channelMap[rid]) {\n\t\t\t\tthis.copyChannelInfo(rid, this.channelMap[rid]);\n\n\t\t\t\tlogger.class.debug('Importing messages from Slack to Rocket.Chat', this.channelMap[rid], rid);\n\t\t\t\tlet results = this.importFromHistory(this.channelMap[rid].family, { channel: this.channelMap[rid].id, oldest: 1 });\n\t\t\t\twhile (results && results.has_more) {\n\t\t\t\t\tresults = this.importFromHistory(this.channelMap[rid].family, { channel: this.channelMap[rid].id, oldest: results.ts });\n\t\t\t\t}\n\n\t\t\t\tlogger.class.debug('Pinning Slack channel messages to Rocket.Chat', this.channelMap[rid], rid);\n\t\t\t\tthis.copyPins(rid, this.channelMap[rid]);\n\n\t\t\t\treturn callback();\n\t\t\t} else {\n\t\t\t\tlet slack_room = this.findSlackChannel(rocketchat_room.name);\n\t\t\t\tif (slack_room) {\n\t\t\t\t\tthis.channelMap[rid] = { id: slack_room.id, family: slack_room.id.charAt(0) === 'C' ? 'channels' : 'groups' };\n\t\t\t\t\treturn this.importMessages(rid, callback);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.class.error('Could not find Slack room with specified name', rocketchat_room.name);\n\t\t\t\t\treturn callback(new Meteor.Error('error-slack-room-not-found', 'Could not find Slack room with specified name'));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlogger.class.error('Could not find Rocket.Chat room with specified id', rid);\n\t\t\treturn callback(new Meteor.Error('error-invalid-room', 'Invalid room'));\n\t\t}\n\t}\n\n\tpopulateChannelMap() {\n\t\tlogger.class.debug('Populating channel map');\n\t\tlet response = HTTP.get('https://slack.com/api/channels.list', { params: { token: this.apiToken } });\n\t\tif (response && response.data && _.isArray(response.data.channels) && response.data.channels.length > 0) {\n\t\t\tfor (let channel of response.data.channels) {\n\t\t\t\tlet rocketchat_room = RocketChat.models.Rooms.findOneByName(channel.name, { fields: { _id: 1 } });\n\t\t\t\tif (rocketchat_room) {\n\t\t\t\t\tthis.channelMap[rocketchat_room._id] = { id: channel.id, family: channel.id.charAt(0) === 'C' ? 'channels' : 'groups' };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresponse = HTTP.get('https://slack.com/api/groups.list', { params: { token: this.apiToken } });\n\t\tif (response && response.data && _.isArray(response.data.groups) && response.data.groups.length > 0) {\n\t\t\tfor (let group of response.data.groups) {\n\t\t\t\tlet rocketchat_room = RocketChat.models.Rooms.findOneByName(group.name, { fields: { _id: 1 } });\n\t\t\t\tif (rocketchat_room) {\n\t\t\t\t\tthis.channelMap[rocketchat_room._id] = { id: group.id, family: group.id.charAt(0) === 'C' ? 'channels' : 'groups' };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tslackBridgeOut(message) {\n\t\t// Ignore messages originating from Slack\n\t\tif (message._id.indexOf('slack-') === 0) {\n\t\t\treturn message;\n\t\t}\n\t\tlet outChannels = RocketChat.settings.get('SlackBridge_Out_All') ? _.keys(this.channelMap) : _.pluck(RocketChat.settings.get('SlackBridge_Out_Channels'), '_id') || [];\n\t\tlogger.class.debug('Out Channels: ', outChannels);\n\t\tif (outChannels.indexOf(message.rid) !== -1) {\n\t\t\tlogger.class.debug('Message out', message);\n\t\t\tthis.postMessage(this.channelMap[message.rid], message);\n\t\t}\n\t\treturn message;\n\t}\n\n\tpostMessage(room, message) {\n\t\tif (room && room.id) {\n\t\t\tlet data = {\n\t\t\t\ttoken: this.apiToken,\n\t\t\t\ttext: message.msg,\n\t\t\t\tchannel: room.id,\n\t\t\t\tusername: message.u && message.u.username,\n\t\t\t\ticon_url: getAvatarUrlFromUsername(message.u && message.u.username),\n\t\t\t\tlink_names: 1\n\t\t\t};\n\t\t\tlogger.class.debug('Post Message', data);\n\t\t\tHTTP.post('https://slack.com/api/chat.postMessage', { params: data });\n\t\t}\n\t}\n}\n\nRocketChat.SlackBridge = new SlackBridge;\n","/* globals msgStream */\nfunction SlackBridgeImport(command, params, item) {\n\tvar channel, room, user;\n\tif (command !== 'slackbridge-import' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\troom = RocketChat.models.Rooms.findOneById(item.rid);\n\tchannel = room.name;\n\tuser = Meteor.users.findOne(Meteor.userId());\n\n\tmsgStream.emit(item.rid, {\n\t\t_id: Random.id(),\n\t\trid: item.rid,\n\t\tu: { username: 'rocket.cat' },\n\t\tts: new Date(),\n\t\tmsg: TAPi18n.__('SlackBridge_start', {\n\t\t\tpostProcess: 'sprintf',\n\t\t\tsprintf: [user.username, channel]\n\t\t}, user.language)\n\t});\n\n\ttry {\n\t\tRocketChat.SlackBridge.importMessages(item.rid, error => {\n\t\t\tif (error) {\n\t\t\t\tmsgStream.emit(item.rid, {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\trid: item.rid,\n\t\t\t\t\tu: { username: 'rocket.cat' },\n\t\t\t\t\tts: new Date(),\n\t\t\t\t\tmsg: TAPi18n.__('SlackBridge_error', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [channel, error.message]\n\t\t\t\t\t}, user.language)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmsgStream.emit(item.rid, {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\trid: item.rid,\n\t\t\t\t\tu: { username: 'rocket.cat' },\n\t\t\t\t\tts: new Date(),\n\t\t\t\t\tmsg: TAPi18n.__('SlackBridge_finish', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [channel]\n\t\t\t\t\t}, user.language)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tmsgStream.emit(item.rid, {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tu: { username: 'rocket.cat' },\n\t\t\tts: new Date(),\n\t\t\tmsg: TAPi18n.__('SlackBridge_error', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel, error.message]\n\t\t\t}, user.language)\n\t\t});\n\t\tthrow error;\n\t}\n\treturn SlackBridgeImport;\n}\n\nRocketChat.slashCommands.add('slackbridge-import', SlackBridgeImport);\n"]}