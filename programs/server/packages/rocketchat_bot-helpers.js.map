{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:bot-helpers/server/index.js","meteor://ðŸ’»app/packages/rocketchat:bot-helpers/server/settings.js"],"names":["BotHelpers","queries","online","$ne","users","$not","$all","setupCursors","fieldsSetting","userFields","split","forEach","n","trim","_allUsers","Meteor","find","fields","_onlineUsers","$and","request","prop","requestError","Error","method","action","length","fetch","hasOwnProperty","map","user","username","name","_id","botHelpers","RocketChat","settings","get","settingKey","settingValue","methods","botRequest","userID","userId","authz","hasRole","startup","addGroup","add","type","section","i18nLabel","i18nDescription"],"mappings":"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","file":"/packages/rocketchat_bot-helpers.js","sourcesContent":["/**\n * BotHelpers helps bots\n * \"private\" properties use meteor collection cursors, so they stay reactive\n * \"public\" properties use getters to fetch and filter collections as array\n */\nclass BotHelpers {\n\tconstructor() {\n\t\tthis.queries = {\n\t\t\tonline: { 'status': { $ne: 'offline' } },\n\t\t\tusers: { 'roles': { $not: { $all: ['bot'] } } }\n\t\t};\n\t}\n\n\t// setup collection cursors with array of fields from setting\n\tsetupCursors(fieldsSetting) {\n\t\tthis.userFields = {};\n\t\tif (typeof fieldsSetting === 'string') {\n\t\t\tfieldsSetting = fieldsSetting.split(',');\n\t\t}\n\t\tfieldsSetting.forEach((n) => {\n\t\t\tthis.userFields[n.trim()] = 1;\n\t\t});\n\t\tthis._allUsers = Meteor.users.find(this.queries.users, { fields: this.userFields });\n\t\tthis._onlineUsers = Meteor.users.find({ $and: [this.queries.users, this.queries.online] }, { fields: this.userFields });\n\t}\n\n\t// request methods or props as arguments to Meteor.call\n\trequest(prop) {\n\t\tif (typeof this[prop] === 'undefined') {\n\t\t\treturn null;\n\t\t} else if (typeof this[prop] === 'function') {\n\t\t\treturn this[prop]();\n\t\t} else {\n\t\t\treturn this[prop];\n\t\t}\n\t}\n\n\t// generic error whenever property access insufficient to fill request\n\trequestError() {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Bot request not allowed', { method: 'botRequest', action: 'bot_request' });\n\t}\n\n\t// \"public\" properties accessed by getters\n\t// allUsers / onlineUsers return whichever properties are enabled by settings\n\tget allUsers() {\n\t\tif (!this.userFields.length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._allUsers.fetch();\n\t\t}\n\t}\n\tget onlineUsers() {\n\t\tif (!this.userFields.length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._onlineUsers.fetch();\n\t\t}\n\t}\n\tget allUsernames() {\n\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._allUsers.fetch().map((user) => user.username);\n\t\t}\n\t}\n\tget onlineUsernames() {\n\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._onlineUsers.fetch().map((user) => user.username);\n\t\t}\n\t}\n\tget allNames() {\n\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._allUsers.fetch().map((user) => user.name);\n\t\t}\n\t}\n\tget onlineNames() {\n\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._onlineUsers.fetch().map((user) => user.name);\n\t\t}\n\t}\n\tget allIDs() {\n\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._allUsers.fetch().map((user) => {\n\t\t\t\treturn { 'id': user._id, 'name': user.username };\n\t\t\t});\n\t\t}\n\t}\n\tget onlineIDs() {\n\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._onlineUsers.fetch().map((user) => {\n\t\t\t\treturn { 'id': user._id, 'name': user.username };\n\t\t\t});\n\t\t}\n\t}\n}\n\n// add class to meteor methods\nconst botHelpers = new BotHelpers();\n\n// init cursors with fields setting and update on setting change\nRocketChat.settings.get('BotHelpers_userFields', function(settingKey, settingValue) {\n\tbotHelpers.setupCursors(settingValue);\n});\n\nMeteor.methods({\n\tbotRequest: (...args) => {\n\t\tlet userID = Meteor.userId();\n\t\tif (userID && RocketChat.authz.hasRole(userID, 'bot')) {\n\t\t\treturn botHelpers.request(...args);\n\t\t} else {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'botRequest' });\n\t\t}\n\t}\n});\n","Meteor.startup(function() {\n\tRocketChat.settings.addGroup('Bots', function() {\n\t\tthis.add('BotHelpers_userFields', '_id, name, username, emails, language, utcOffset', {\n\t\t\ttype: 'string',\n\t\t\tsection: 'Helpers',\n\t\t\ti18nLabel: 'BotHelpers_userFields',\n\t\t\ti18nDescription: 'BotHelpers_userFields_Description'\n\t\t});\n\t});\n});\n"]}