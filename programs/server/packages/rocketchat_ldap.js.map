{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:ldap/server/ldap.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/sync.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/loginHandler.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/testConnection.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/syncUsers.js"],"names":["ldapjs","LDAPJS","logger","Logger","sections","connection","bind","search","auth","LDAP","self","connected","options","host","RocketChat","settings","get","port","connect_timeout","idle_timeout","encryption","ca_cert","reject_unauthorized","domain_base","use_custom_domain_search","custom_domain_search","domain_search_user","domain_search_password","domain_search_filter","domain_search_user_id","domain_search_object_class","domain_search_object_category","connectSync","Meteor","wrapAsync","connectAsync","searchAllSync","searchAllAsync","callback","info","replied","connectionOptions","url","timeout","connectTimeout","idleTimeout","reconnect","tlsOptions","rejectUnauthorized","chainLines","split","cert","ca","forEach","line","push","match","join","debug","client","createClient","bindSync","on","error","starttls","response","setTimeout","Error","getDomainBindSearch","JSON","parse","filter","userDN","password","length","item","bindIfNecessary","domainBinded","domain_search","searchUsersSync","username","searchOptions","replace","scope","getUserByIdSync","id","attribute","Unique_Identifier_Field","filters","EqualityFilter","value","Buffer","OrFilter","toString","result","Array","isArray","getUserByUsernameSync","res","entries","jsonEntries","entry","json","stringify","authSync","dn","disconnect","unbind","slug","text","slugify","getLdapUsername","ldapUser","usernameField","indexOf","field","object","getLdapUserUniqueID","LDAP_Domain_Search_User_ID","concat","find","_","isEmpty","raw","getDataToSyncUserData","user","syncUserData","syncUserDataFieldMap","trim","fieldMap","userData","emailList","map","userField","ldapField","hasOwnProperty","isObject","address","verified","name","emails","uniqueId","services","ldap","idAttribute","size","email","_id","users","update","$set","findOne","_setUsername","avatar","thumbnailPhoto","jpegPhoto","rs","RocketChatFile","bufferToStream","RocketChatFileAvatarInstance","deleteFile","encodeURIComponent","ws","createWriteStream","bindEnvironment","models","Users","setAvatarOrigin","Notifications","notifyAll","pipe","addLdapUser","userObject","mail","Accounts","createUser","runAsUser","call","userId","sync","findLDAPUsers","ldapUsers","userQuery","interval","key","clearInterval","clearTimeout","setInterval","fallbackDefaultAccountSystem","loginRequest","digest","SHA256","algorithm","_runLoginHandlers","registerLoginHandler","ldapOptions","undefined","ldapPass","stampedToken","_generateStampedLoginToken","$push","_hashStampedToken","setPassword","logout","token","startup","addGroup","enableQuery","enableTLSQuery","$in","customBindSearchEnabledQuery","customBindSearchDisabledQuery","syncDataQuery","add","type","values","i18nLabel","multiline","actionText","methods","ldap_test_connection","method","authz","hasRole","console","log","message","params","ldap_sync_users"],"mappings":"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","file":"/packages/rocketchat_ldap.js","sourcesContent":["/* globals LDAP:true, LDAPJS */\n/* exported LDAP */\n\nconst ldapjs = LDAPJS;\n\nconst logger = new Logger('LDAP', {\n\tsections: {\n\t\tconnection: 'Connection',\n\t\tbind: 'Bind',\n\t\tsearch: 'Search',\n\t\tauth: 'Auth'\n\t}\n});\n\nLDAP = class LDAP {\n\tconstructor() {\n\t\tconst self = this;\n\n\t\tself.ldapjs = ldapjs;\n\n\t\tself.connected = false;\n\n\t\tself.options = {\n\t\t\thost: RocketChat.settings.get('LDAP_Host'),\n\t\t\tport: RocketChat.settings.get('LDAP_Port'),\n\t\t\tconnect_timeout: RocketChat.settings.get('LDAP_Connect_Timeout'),\n\t\t\tidle_timeout: RocketChat.settings.get('LDAP_Idle_Timeout'),\n\t\t\tencryption: RocketChat.settings.get('LDAP_Encryption'),\n\t\t\tca_cert: RocketChat.settings.get('LDAP_CA_Cert'),\n\t\t\treject_unauthorized: RocketChat.settings.get('LDAP_Reject_Unauthorized') || false,\n\t\t\tdomain_base: RocketChat.settings.get('LDAP_Domain_Base'),\n\t\t\tuse_custom_domain_search: RocketChat.settings.get('LDAP_Use_Custom_Domain_Search'),\n\t\t\tcustom_domain_search: RocketChat.settings.get('LDAP_Custom_Domain_Search'),\n\t\t\tdomain_search_user: RocketChat.settings.get('LDAP_Domain_Search_User'),\n\t\t\tdomain_search_password: RocketChat.settings.get('LDAP_Domain_Search_Password'),\n\t\t\tdomain_search_filter: RocketChat.settings.get('LDAP_Domain_Search_Filter'),\n\t\t\tdomain_search_user_id: RocketChat.settings.get('LDAP_Domain_Search_User_ID'),\n\t\t\tdomain_search_object_class: RocketChat.settings.get('LDAP_Domain_Search_Object_Class'),\n\t\t\tdomain_search_object_category: RocketChat.settings.get('LDAP_Domain_Search_Object_Category')\n\t\t};\n\n\t\tself.connectSync = Meteor.wrapAsync(self.connectAsync, self);\n\t\tself.searchAllSync = Meteor.wrapAsync(self.searchAllAsync, self);\n\t}\n\n\tconnectAsync(callback) {\n\t\tconst self = this;\n\n\t\tlogger.connection.info('Init setup');\n\n\t\tlet replied = false;\n\n\t\tconst connectionOptions = {\n\t\t\turl: `${self.options.host}:${self.options.port}`,\n\t\t\ttimeout: 1000 * 60 * 10,\n\t\t\tconnectTimeout: self.options.connect_timeout,\n\t\t\tidleTimeout: self.options.idle_timeout,\n\t\t\treconnect: false\n\t\t};\n\n\t\tconst tlsOptions = {\n\t\t\trejectUnauthorized: self.options.reject_unauthorized\n\t\t};\n\n\t\tif (self.options.ca_cert && self.options.ca_cert !== '') {\n\t\t\t// Split CA cert into array of strings\n\t\t\tvar chainLines = RocketChat.settings.get('LDAP_CA_Cert').split('\\n');\n\t\t\tvar cert = [];\n\t\t\tvar ca = [];\n\t\t\tchainLines.forEach(function(line) {\n\t\t\t\tcert.push(line);\n\t\t\t\tif (line.match(/-END CERTIFICATE-/)) {\n\t\t\t\t\tca.push(cert.join('\\n'));\n\t\t\t\t\tcert = [];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttlsOptions.ca = ca;\n\t\t}\n\n\t\tif (self.options.encryption === 'ssl') {\n\t\t\tconnectionOptions.url = `ldaps://${connectionOptions.url}`;\n\t\t\tconnectionOptions.tlsOptions = tlsOptions;\n\t\t} else {\n\t\t\tconnectionOptions.url = `ldap://${connectionOptions.url}`;\n\t\t}\n\n\t\tlogger.connection.info('Connecting', connectionOptions.url);\n\t\tlogger.connection.debug('connectionOptions', connectionOptions);\n\n\t\tself.client = ldapjs.createClient(connectionOptions);\n\n\t\tself.bindSync = Meteor.wrapAsync(self.client.bind, self.client);\n\n\t\tself.client.on('error', function(error) {\n\t\t\tlogger.connection.error('connection', error);\n\t\t\tif (replied === false) {\n\t\t\t\treplied = true;\n\t\t\t\tcallback(error, null);\n\t\t\t}\n\t\t});\n\n\t\tif (self.options.encryption === 'tls') {\n\n\t\t\t// Set host parameter for tls.connect which is used by ldapjs starttls. This shouldn't be needed in newer nodejs versions (e.g v5.6.0).\n\t\t\t// https://github.com/RocketChat/Rocket.Chat/issues/2035\n\t\t\t// https://github.com/mcavage/node-ldapjs/issues/349\n\t\t\ttlsOptions.host = [self.options.host];\n\n\t\t\tlogger.connection.info('Starting TLS');\n\t\t\tlogger.connection.debug('tlsOptions', tlsOptions);\n\n\t\t\tself.client.starttls(tlsOptions, null, function(error, response) {\n\t\t\t\tif (error) {\n\t\t\t\t\tlogger.connection.error('TLS connection', error);\n\t\t\t\t\tif (replied === false) {\n\t\t\t\t\t\treplied = true;\n\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlogger.connection.info('TLS connected');\n\t\t\t\tself.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.client.on('connect', function(response) {\n\t\t\t\tlogger.connection.info('LDAP connected');\n\t\t\t\tself.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(function() {\n\t\t\tif (replied === false) {\n\t\t\t\tlogger.connection.error('connection time out', connectionOptions.timeout);\n\t\t\t\treplied = true;\n\t\t\t\tcallback(new Error('Timeout'));\n\t\t\t}\n\t\t}, connectionOptions.timeout);\n\t}\n\n\tgetDomainBindSearch() {\n\t\tconst self = this;\n\n\t\tif (self.options.use_custom_domain_search === true) {\n\t\t\tlet custom_domain_search;\n\t\t\ttry {\n\t\t\t\tcustom_domain_search = JSON.parse(self.options.custom_domain_search);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error('Invalid Custom Domain Search JSON');\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tfilter: custom_domain_search.filter,\n\t\t\t\tdomain_search_user: custom_domain_search.userDN || '',\n\t\t\t\tdomain_search_password: custom_domain_search.password || ''\n\t\t\t};\n\t\t}\n\n\t\tlet filter = ['(&'];\n\n\t\tif (self.options.domain_search_object_category !== '') {\n\t\t\tfilter.push(`(objectCategory=${self.options.domain_search_object_category})`);\n\t\t}\n\n\t\tif (self.options.domain_search_object_class !== '') {\n\t\t\tfilter.push(`(objectclass=${self.options.domain_search_object_class})`);\n\t\t}\n\n\t\tif (self.options.domain_search_filter !== '') {\n\t\t\tfilter.push(`(${self.options.domain_search_filter})`);\n\t\t}\n\n\t\tconst domain_search_user_id = self.options.domain_search_user_id.split(',');\n\t\tif (domain_search_user_id.length === 1) {\n\t\t\tfilter.push(`(${domain_search_user_id[0]}=#{username})`);\n\t\t} else {\n\t\t\tfilter.push('(|');\n\t\t\tdomain_search_user_id.forEach((item) => {\n\t\t\t\tfilter.push(`(${item}=#{username})`);\n\t\t\t});\n\t\t\tfilter.push(')');\n\t\t}\n\n\t\tfilter.push(')');\n\n\t\treturn {\n\t\t\tfilter: filter.join(''),\n\t\t\tdomain_search_user: self.options.domain_search_user || '',\n\t\t\tdomain_search_password: self.options.domain_search_password || ''\n\t\t};\n\t}\n\n\tbindIfNecessary() {\n\t\tconst self = this;\n\n\t\tif (self.domainBinded === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domain_search = self.getDomainBindSearch();\n\n\t\tif (domain_search.domain_search_user !== '' && domain_search.domain_search_password !== '') {\n\t\t\tlogger.bind.info('Binding admin user', domain_search.domain_search_user);\n\t\t\tself.bindSync(domain_search.domain_search_user, domain_search.domain_search_password);\n\t\t\tself.domainBinded = true;\n\t\t}\n\t}\n\n\tsearchUsersSync(username) {\n\t\tconst self = this;\n\n\t\tself.bindIfNecessary();\n\n\t\tconst domain_search = self.getDomainBindSearch();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: domain_search.filter.replace(/#{username}/g, username),\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('domain_base', self.options.domain_base);\n\n\t\treturn self.searchAllSync(self.options.domain_base, searchOptions);\n\t}\n\n\tgetUserByIdSync(id, attribute) {\n\t\tconst self = this;\n\n\t\tself.bindIfNecessary();\n\n\t\tlet Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field').split(',');\n\n\t\tlet filter;\n\n\t\tif (attribute) {\n\t\t\tfilter = new self.ldapjs.filters.EqualityFilter({\n\t\t\t\tattribute: attribute,\n\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t});\n\t\t} else {\n\t\t\tconst filters = [];\n\t\t\tUnique_Identifier_Field.forEach(function(item) {\n\t\t\t\tfilters.push(new self.ldapjs.filters.EqualityFilter({\n\t\t\t\t\tattribute: item,\n\t\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t\t}));\n\t\t\t});\n\n\t\t\tfilter = new self.ldapjs.filters.OrFilter({filters: filters});\n\t\t}\n\n\t\tconst searchOptions = {\n\t\t\tfilter: filter,\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching by id', id);\n\t\tlogger.search.debug('search filter', searchOptions.filter.toString());\n\t\tlogger.search.debug('domain_base', self.options.domain_base);\n\n\t\tconst result = self.searchAllSync(self.options.domain_base, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by id', id, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tgetUserByUsernameSync(username) {\n\t\tconst self = this;\n\n\t\tself.bindIfNecessary();\n\n\t\tconst domain_search = self.getDomainBindSearch();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: domain_search.filter.replace(/#{username}/g, username),\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('domain_base', self.options.domain_base);\n\n\t\tconst result = self.searchAllSync(self.options.domain_base, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by username', username, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tsearchAllAsync(domain_base, options, callback) {\n\t\tconst self = this;\n\n\t\tself.client.search(domain_base, options, function(error, res) {\n\t\t\tif (error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', function(error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tconst entries = [];\n\t\t\tconst jsonEntries = [];\n\n\t\t\tres.on('searchEntry', function(entry) {\n\t\t\t\tentries.push(entry);\n\t\t\t\tjsonEntries.push(entry.json);\n\t\t\t});\n\n\t\t\tres.on('end', function(/*result*/) {\n\t\t\t\tlogger.search.info('Search result count', entries.length);\n\t\t\t\tlogger.search.debug('Search result', JSON.stringify(jsonEntries, null, 2));\n\t\t\t\tcallback(null, entries);\n\t\t\t});\n\t\t});\n\t}\n\n\tauthSync(dn, password) {\n\t\tconst self = this;\n\n\t\tlogger.auth.info('Authenticating', dn);\n\n\t\ttry {\n\t\t\tself.bindSync(dn, password);\n\t\t\tlogger.auth.info('Authenticated', dn);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tlogger.auth.info('Not authenticated', dn);\n\t\t\tlogger.auth.debug('error', error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdisconnect() {\n\t\tconst self = this;\n\n\t\tself.connected = false;\n\t\tlogger.connection.info('Disconecting');\n\t\tself.client.unbind();\n\t}\n};\n","/* globals slug:true, slugify, LDAP, getLdapUsername:true, getLdapUserUniqueID:true, getDataToSyncUserData:true, syncUserData:true, sync:true, addLdapUser:true  */\n\nconst logger = new Logger('LDAPSync', {});\n\nslug = function slug(text) {\n\tif (RocketChat.settings.get('UTF8_Names_Slugify') !== true) {\n\t\treturn text;\n\t}\n\ttext = slugify(text, '.');\n\treturn text.replace(/[^0-9a-z-_.]/g, '');\n};\n\n\ngetLdapUsername = function getLdapUsername(ldapUser) {\n\tlet usernameField = RocketChat.settings.get('LDAP_Username_Field');\n\n\tif (usernameField.indexOf('#{') > -1) {\n\t\treturn usernameField.replace(/#{(.+?)}/g, function(match, field) {\n\t\t\treturn ldapUser.object[field];\n\t\t});\n\t}\n\n\treturn ldapUser.object[usernameField];\n};\n\n\ngetLdapUserUniqueID = function getLdapUserUniqueID(ldapUser) {\n\tlet Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field');\n\n\tif (Unique_Identifier_Field !== '') {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tUnique_Identifier_Field = [];\n\t}\n\n\tlet LDAP_Domain_Search_User_ID = RocketChat.settings.get('LDAP_Domain_Search_User_ID');\n\n\tif (LDAP_Domain_Search_User_ID !== '') {\n\t\tLDAP_Domain_Search_User_ID = LDAP_Domain_Search_User_ID.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tLDAP_Domain_Search_User_ID = [];\n\t}\n\n\tUnique_Identifier_Field = Unique_Identifier_Field.concat(LDAP_Domain_Search_User_ID);\n\n\tif (Unique_Identifier_Field.length > 0) {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.find((field) => {\n\t\t\treturn !_.isEmpty(ldapUser.object[field]);\n\t\t});\n\t\tif (Unique_Identifier_Field) {\n\t\t\tUnique_Identifier_Field = {\n\t\t\t\tattribute: Unique_Identifier_Field,\n\t\t\t\tvalue: ldapUser.raw[Unique_Identifier_Field].toString('hex')\n\t\t\t};\n\t\t}\n\t\treturn Unique_Identifier_Field;\n\t}\n};\n\n\ngetDataToSyncUserData = function getDataToSyncUserData(ldapUser, user) {\n\tconst syncUserData = RocketChat.settings.get('LDAP_Sync_User_Data');\n\tconst syncUserDataFieldMap = RocketChat.settings.get('LDAP_Sync_User_Data_FieldMap').trim();\n\n\tif (syncUserData && syncUserDataFieldMap) {\n\t\tconst fieldMap = JSON.parse(syncUserDataFieldMap);\n\t\tlet userData = {};\n\n\t\tlet emailList = [];\n\t\t_.map(fieldMap, function(userField, ldapField) {\n\t\t\tif (!ldapUser.object.hasOwnProperty(ldapField)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (userField) {\n\t\t\t\tcase 'email':\n\t\t\t\t\tif (_.isObject(ldapUser.object[ldapField] === 'object')) {\n\t\t\t\t\t\t_.map(ldapUser.object[ldapField], function(item) {\n\t\t\t\t\t\t\temailList.push({ address: item, verified: true });\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\temailList.push({ address: ldapUser.object[ldapField], verified: true });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'name':\n\t\t\t\t\tif (user.name !== ldapUser.object[ldapField]) {\n\t\t\t\t\t\tuserData.name = ldapUser.object[ldapField];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tif (emailList.length > 0) {\n\t\t\tif (JSON.stringify(user.emails) !== JSON.stringify(emailList)) {\n\t\t\t\tuserData.emails = emailList;\n\t\t\t}\n\t\t}\n\n\t\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\n\t\tif (uniqueId && (!user.services || !user.services.ldap || user.services.ldap.id !== uniqueId.value || user.services.ldap.idAttribute !== uniqueId.attribute)) {\n\t\t\tuserData['services.ldap.id'] = uniqueId.value;\n\t\t\tuserData['services.ldap.idAttribute'] = uniqueId.attribute;\n\t\t}\n\n\t\tif (user.ldap !== true) {\n\t\t\tuserData.ldap = true;\n\t\t}\n\n\t\tif (_.size(userData)) {\n\t\t\treturn userData;\n\t\t}\n\t}\n};\n\n\nsyncUserData = function syncUserData(user, ldapUser) {\n\tlogger.info('Syncing user data');\n\tlogger.debug('user', {'email': user.email, '_id': user._id});\n\tlogger.debug('ldapUser', ldapUser);\n\n\tconst userData = getDataToSyncUserData(ldapUser, user);\n\tif (user && user._id && userData) {\n\t\tMeteor.users.update(user._id, { $set: userData });\n\t\tuser = Meteor.users.findOne({_id: user._id});\n\t\tlogger.debug('setting', JSON.stringify(userData, null, 2));\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tconst username = slug(getLdapUsername(ldapUser));\n\t\tif (user && user._id && username !== user.username) {\n\t\t\tlogger.info('Syncing user username', user.username, '->', username);\n\t\t\tRocketChat._setUsername(user._id, username);\n\t\t}\n\t}\n\n\tif (user && user._id && RocketChat.settings.get('LDAP_Sync_User_Avatar') === true) {\n\t\tconst avatar = ldapUser.raw.thumbnailPhoto || ldapUser.raw.jpegPhoto;\n\t\tif (avatar) {\n\t\t\tlogger.info('Syncing user avatar');\n\t\t\tconst rs = RocketChatFile.bufferToStream(avatar);\n\t\t\tRocketChatFileAvatarInstance.deleteFile(encodeURIComponent(`${user.username}.jpg`));\n\t\t\tconst ws = RocketChatFileAvatarInstance.createWriteStream(encodeURIComponent(`${user.username}.jpg`), 'image/jpeg');\n\t\t\tws.on('end', Meteor.bindEnvironment(function() {\n\t\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t\tRocketChat.models.Users.setAvatarOrigin(user._id, 'ldap');\n\t\t\t\t\tRocketChat.Notifications.notifyAll('updateAvatar', {username: user.username});\n\t\t\t\t}, 500);\n\t\t\t}));\n\t\t\trs.pipe(ws);\n\t\t}\n\t}\n};\n\naddLdapUser = function addLdapUser(ldapUser, username, password) {\n\tvar userObject = {\n\t\tusername: username\n\t};\n\n\tlet userData = getDataToSyncUserData(ldapUser, {});\n\n\tif (userData && userData.emails) {\n\t\tuserObject.email = userData.emails[0].address;\n\t} else if (ldapUser.object.mail && ldapUser.object.mail.indexOf('@') > -1) {\n\t\tuserObject.email = ldapUser.object.mail;\n\t} else if (RocketChat.settings.get('LDAP_Default_Domain') !== '') {\n\t\tuserObject.email = username + '@' + RocketChat.settings.get('LDAP_Default_Domain');\n\t} else {\n\t\tconst error = new Meteor.Error('LDAP-login-error', 'LDAP Authentication succeded, there is no email to create an account. Have you tried setting your Default Domain in LDAP Settings?');\n\t\tlogger.error(error);\n\t\tthrow error;\n\t}\n\n\tlogger.debug('New user data', userObject);\n\n\tif (password) {\n\t\tuserObject.password = password;\n\t}\n\n\ttry {\n\t\tuserObject._id = Accounts.createUser(userObject);\n\t} catch (error) {\n\t\tlogger.error('Error creating user', error);\n\t\tthrow error;\n\t}\n\n\tsyncUserData(userObject, ldapUser);\n\n\tlogger.info('Joining user to default channels');\n\tMeteor.runAsUser(userObject._id, function() {\n\t\tMeteor.call('joinDefaultChannels');\n\t});\n\n\treturn {\n\t\tuserId: userObject._id\n\t};\n};\n\nsync = function sync() {\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn;\n\t}\n\n\tconst ldap = new LDAP();\n\n\ttry {\n\t\tldap.connectSync();\n\n\t\tconst users = RocketChat.models.Users.findLDAPUsers();\n\n\t\tif (RocketChat.settings.get('LDAP_Import_Users') === true && RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\t\tconst ldapUsers = ldap.searchUsersSync('*');\n\t\t\tldapUsers.forEach(function(ldapUser) {\n\t\t\t\tconst username = slug(getLdapUsername(ldapUser));\n\t\t\t\t// Look to see if user already exists\n\t\t\t\tlet userQuery;\n\t\t\t\tlet user;\n\t\t\t\tuserQuery = {\n\t\t\t\t\tusername: username\n\t\t\t\t};\n\n\t\t\t\tlogger.debug('userQuery', userQuery);\n\n\t\t\t\tuser = Meteor.users.findOne(userQuery);\n\n\t\t\t\tif (!user) {\n\t\t\t\t\taddLdapUser(ldapUser, username);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tusers.forEach(function(user) {\n\t\t\tlet ldapUser;\n\n\t\t\tif (user.services && user.services.ldap && user.services.ldap.id) {\n\t\t\t\tldapUser = ldap.getUserByIdSync(user.services.ldap.id, user.services.ldap.idAttribute);\n\t\t\t} else {\n\t\t\t\tldapUser = ldap.getUserByUsernameSync(user.username);\n\t\t\t}\n\n\t\t\tif (ldapUser) {\n\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t} else {\n\t\t\t\tlogger.info('Can\\'t sync user', user.username);\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tlogger.error(error);\n\t\treturn error;\n\t}\n\n\tldap.disconnect();\n\treturn true;\n};\n\nlet interval;\nlet timeout;\n\nRocketChat.settings.get('LDAP_Sync_User_Data', function(key, value) {\n\tMeteor.clearInterval(interval);\n\tMeteor.clearTimeout(timeout);\n\n\tif (value === true) {\n\t\tlogger.info('Enabling LDAP user sync');\n\t\tinterval = Meteor.setInterval(sync, 1000 * 60 * 60);\n\t\ttimeout = Meteor.setTimeout(function() {\n\t\t\tsync();\n\t\t}, 1000 * 60 * 10);\n\t} else {\n\t\tlogger.info('Disabling LDAP user sync');\n\t}\n});\n","/* globals LDAP, slug, getLdapUsername, getLdapUserUniqueID, syncUserData, addLdapUser */\n/* eslint new-cap: [2, {\"capIsNewExceptions\": [\"SHA256\"]}] */\n\nconst logger = new Logger('LDAPHandler', {});\n\nfunction fallbackDefaultAccountSystem(bind, username, password) {\n\tif (typeof username === 'string') {\n\t\tif (username.indexOf('@') === -1) {\n\t\t\tusername = {username: username};\n\t\t} else {\n\t\t\tusername = {email: username};\n\t\t}\n\t}\n\n\tlogger.info('Fallback to default account systen', username);\n\n\tconst loginRequest = {\n\t\tuser: username,\n\t\tpassword: {\n\t\t\tdigest: SHA256(password),\n\t\t\talgorithm: 'sha-256'\n\t\t}\n\t};\n\n\treturn Accounts._runLoginHandlers(bind, loginRequest);\n}\n\nAccounts.registerLoginHandler('ldap', function(loginRequest) {\n\tif (!loginRequest.ldap || !loginRequest.ldapOptions) {\n\t\treturn undefined;\n\t}\n\n\tlogger.info('Init LDAP login', loginRequest.username);\n\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn fallbackDefaultAccountSystem(this, loginRequest.username, loginRequest.ldapPass);\n\t}\n\n\tconst self = this;\n\tconst ldap = new LDAP();\n\tlet ldapUser;\n\n\ttry {\n\t\tldap.connectSync();\n\t\tconst users = ldap.searchUsersSync(loginRequest.username);\n\n\t\tif (users.length !== 1) {\n\t\t\tlogger.info('Search returned', users.length, 'record(s) for', loginRequest.username);\n\t\t\tthrow new Error('User not Found');\n\t\t}\n\n\t\tif (ldap.authSync(users[0].dn, loginRequest.ldapPass) === true) {\n\t\t\tldapUser = users[0];\n\t\t} else {\n\t\t\tlogger.info('Wrong password for', loginRequest.username);\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error);\n\t}\n\n\tldap.disconnect();\n\n\tif (ldapUser === undefined) {\n\t\tif (RocketChat.settings.get('LDAP_Login_Fallback') === true) {\n\t\t\treturn fallbackDefaultAccountSystem(self, loginRequest.username, loginRequest.ldapPass);\n\t\t}\n\n\t\tthrow new Meteor.Error('LDAP-login-error', 'LDAP Authentication failed with provided username ['+loginRequest.username+']');\n\t}\n\n\tlet username;\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tusername = slug(getLdapUsername(ldapUser));\n\t} else {\n\t\tusername = slug(loginRequest.username);\n\t}\n\n\t// Look to see if user already exists\n\tlet userQuery;\n\n\tlet Unique_Identifier_Field = getLdapUserUniqueID(ldapUser);\n\tlet user;\n\n\tif (Unique_Identifier_Field) {\n\t\tuserQuery = {\n\t\t\t'services.ldap.id': Unique_Identifier_Field.value\n\t\t};\n\n\t\tlogger.info('Querying user');\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\tif (!user) {\n\t\tuserQuery = {\n\t\t\tusername: username\n\t\t};\n\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\t// Login user if they exist\n\tif (user) {\n\t\tif (user.ldap !== true && RocketChat.settings.get('LDAP_Merge_Existing_Users') !== true) {\n\t\t\tlogger.info('User exists without \"ldap: true\"');\n\t\t\tthrow new Meteor.Error('LDAP-login-error', 'LDAP Authentication succeded, but there\\'s already an existing user with provided username ['+username+'] in Mongo.');\n\t\t}\n\n\t\tlogger.info('Logging user');\n\n\t\tconst stampedToken = Accounts._generateStampedLoginToken();\n\n\t\tMeteor.users.update(user._id, {\n\t\t\t$push: {\n\t\t\t\t'services.resume.loginTokens': Accounts._hashStampedToken(stampedToken)\n\t\t\t}\n\t\t});\n\n\t\tsyncUserData(user, ldapUser);\n\t\tAccounts.setPassword(user._id, loginRequest.ldapPass, {logout: false});\n\t\treturn {\n\t\t\tuserId: user._id,\n\t\t\ttoken: stampedToken.token\n\t\t};\n\t}\n\n\tlogger.info('User does not exist, creating', username);\n\n\t// Create new user\n\treturn addLdapUser(ldapUser, username, loginRequest.ldapPass);\n});\n","Meteor.startup(function() {\n\tRocketChat.settings.addGroup('LDAP', function() {\n\t\tconst enableQuery = {_id: 'LDAP_Enable', value: true};\n\t\tconst enableTLSQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Encryption', value: {$in: ['tls', 'ssl']}}\n\t\t];\n\t\tconst customBindSearchEnabledQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Use_Custom_Domain_Search', value: true}\n\t\t];\n\t\tconst customBindSearchDisabledQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Use_Custom_Domain_Search', value: false}\n\t\t];\n\t\tconst syncDataQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Sync_User_Data', value: true}\n\t\t];\n\n\t\tthis.add('LDAP_Enable', false, { type: 'boolean', public: true });\n\t\tthis.add('LDAP_Login_Fallback', true, { type: 'boolean', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Host', '', { type: 'string', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Port', '389', { type: 'string', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Connect_Timeout', 600000, {type: 'int', enableQuery: enableQuery});\n\t\tthis.add('LDAP_Idle_Timeout', 600000, {type: 'int', enableQuery: enableQuery});\n\t\tthis.add('LDAP_Encryption', 'plain', { type: 'select', values: [ { key: 'plain', i18nLabel: 'No_Encryption' }, { key: 'tls', i18nLabel: 'StartTLS' }, { key: 'ssl', i18nLabel: 'SSL/LDAPS' } ], enableQuery: enableQuery });\n\t\tthis.add('LDAP_CA_Cert', '', { type: 'string', multiline: true, enableQuery: enableTLSQuery });\n\t\tthis.add('LDAP_Reject_Unauthorized', true, { type: 'boolean', enableQuery: enableTLSQuery });\n\t\tthis.add('LDAP_Domain_Base', '', { type: 'string', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Use_Custom_Domain_Search', false, { type: 'boolean', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Custom_Domain_Search', '', { type: 'string', enableQuery: customBindSearchEnabledQuery });\n\t\tthis.add('LDAP_Domain_Search_User', '', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_Password', '', { type: 'password', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_Filter', '', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_User_ID', 'sAMAccountName', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_Object_Class', 'user', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_Object_Category', 'person', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Username_Field', 'sAMAccountName', { type: 'string', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Unique_Identifier_Field', 'objectGUID,ibm-entryUUID,GUID,dominoUNID,nsuniqueId,uidNumber', { type: 'string', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Sync_User_Data', false, { type: 'boolean', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Sync_User_Avatar', true, { type: 'boolean', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Sync_User_Data_FieldMap', '{\"cn\":\"name\", \"mail\":\"email\"}', { type: 'string', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Default_Domain', '', { type: 'string', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Merge_Existing_Users', false, { type: 'boolean', enableQuery: enableQuery });\n\t\tthis.add('LDAP_Import_Users', false, { type: 'boolean', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Test_Connection', 'ldap_test_connection', { type: 'action', actionText: 'Test_Connection' });\n\t\tthis.add('LDAP_Sync_Users', 'ldap_sync_users', { type: 'action', actionText: 'Sync_Users' });\n\t});\n});\n","/* globals LDAP */\n\nMeteor.methods({\n\tldap_test_connection: function() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tlet ldap;\n\t\ttry {\n\t\t\tldap = new LDAP();\n\t\t\tldap.connectSync();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.message);\n\t\t}\n\n\t\ttry {\n\t\t\tldap.bindIfNecessary();\n\t\t\tldap.disconnect();\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error(error.name || error.message);\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: 'Connection_success',\n\t\t\tparams: []\n\t\t};\n\t}\n});\n","/* globals sync */\n\nMeteor.methods({\n\tldap_sync_users: function() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tconst result = sync();\n\n\t\tif (result === true) {\n\t\t\treturn {\n\t\t\t\tmessage: 'Sync_success',\n\t\t\t\tparams: []\n\t\t\t};\n\t\t}\n\n\t\tthrow result;\n\t}\n});\n"]}