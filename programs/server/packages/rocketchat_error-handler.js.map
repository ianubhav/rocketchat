{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:error-handler/server/lib/RocketChat.ErrorHandler.js","meteor://ðŸ’»app/packages/rocketchat:error-handler/server/startup/settings.js"],"names":["ErrorHandler","reporting","rid","lastError","registerHandlers","RocketChat","settings","get","key","value","trim","getRoomId","process","on","Meteor","bindEnvironment","error","trackError","message","stack","self","originalMeteorDebug","_debug","call","apply","arguments","roomName","replace","room","models","Rooms","findOneByName","fields","_id","t","user","Users","findOneById","sendMessage","msg","addGroup","add","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA,Y;AACL,yBAAc;AAAA;;AAAA;;AACb,OAAKC,SAAL,GAAiB,KAAjB;AACA,OAAKC,GAAL,GAAW,IAAX;AACA,OAAKC,SAAL,GAAiB,IAAjB;;AAEA,OAAKC,gBAAL;;AAEAC,aAAWC,QAAX,CAAoBC,GAApB,CAAwB,2BAAxB,EAAqD,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACpE,OAAIA,MAAMC,IAAN,EAAJ,EAAkB;AACjB,UAAKT,SAAL,GAAiB,IAAjB;AACA,UAAKC,GAAL,GAAW,MAAKS,SAAL,CAAeF,KAAf,CAAX;AACA,IAHD,MAGO;AACN,UAAKR,SAAL,GAAiB,KAAjB;AACA,UAAKC,GAAL,GAAW,EAAX;AACA;AACD,GARD;AASA;;wBAEDE,gB;8BAAmB;AAAA;;AAClBQ,WAAQC,EAAR,CAAW,mBAAX,EAAgCC,OAAOC,eAAP,CAAuB,UAACC,KAAD,EAAW;AACjE,QAAI,CAAC,OAAKf,SAAV,EAAqB;AACpB;AACA;AACD,WAAKgB,UAAL,CAAgBD,MAAME,OAAtB,EAA+BF,MAAMG,KAArC;AACA,IAL+B,CAAhC;;AAOA,OAAMC,OAAO,IAAb;AACA,OAAIC,sBAAsBP,OAAOQ,MAAjC;AACAR,UAAOQ,MAAP,GAAgB,UAASJ,OAAT,EAAkBC,KAAlB,EAAyB;AACxC,QAAI,CAACC,KAAKnB,SAAV,EAAqB;AACpB,YAAOoB,oBAAoBE,IAApB,CAAyB,IAAzB,EAA+BL,OAA/B,EAAwCC,KAAxC,CAAP;AACA;AACDC,SAAKH,UAAL,CAAgBC,OAAhB,EAAyBC,KAAzB;AACA,WAAOE,oBAAoBG,KAApB,CAA0B,IAA1B,EAAgCC,SAAhC,CAAP;AACA,IAND;AAOA;;;;;wBAEDd,S;qBAAUe,Q,EAAU;AACnBA,cAAWA,SAASC,OAAT,CAAiB,GAAjB,CAAX;AACA,OAAIC,OAAOvB,WAAWwB,MAAX,CAAkBC,KAAlB,CAAwBC,aAAxB,CAAsCL,QAAtC,EAAgD,EAAEM,QAAQ,EAAEC,KAAK,CAAP,EAAUC,GAAG,CAAb,EAAV,EAAhD,CAAX;AACA,OAAIN,SAASA,KAAKM,CAAL,KAAW,GAAX,IAAkBN,KAAKM,CAAL,KAAW,GAAtC,CAAJ,EAAgD;AAC/C,WAAON,KAAKK,GAAZ;AACA,IAFD,MAEO;AACN,SAAKhC,SAAL,GAAiB,KAAjB;AACA;AACD;;;;;wBAEDgB,U;sBAAWC,O,EAASC,K,EAAO;AAC1B,OAAI,KAAKlB,SAAL,IAAkB,KAAKC,GAAvB,IAA8B,KAAKC,SAAL,KAAmBe,OAArD,EAA8D;AAC7D,SAAKf,SAAL,GAAiBe,OAAjB;AACA,QAAIiB,OAAO9B,WAAWwB,MAAX,CAAkBO,KAAlB,CAAwBC,WAAxB,CAAoC,YAApC,CAAX;;AAEA,QAAIlB,KAAJ,EAAW;AACVD,eAAUA,UAAU,SAAV,GAAsBC,KAAtB,GAA8B,OAAxC;AACA;;AAEDd,eAAWiC,WAAX,CAAuBH,IAAvB,EAA6B,EAAEI,KAAKrB,OAAP,EAA7B,EAA+C,EAAEe,KAAK,KAAK/B,GAAZ,EAA/C;AACA;AACD;;;;;;;;AAGFG,WAAWL,YAAX,GAA0B,IAAIA,YAAJ,EAA1B,+E;;;;;;;;;;;AC9DAK,WAAWC,QAAX,CAAoBkC,QAApB,CAA6B,MAA7B,EAAqC,YAAW;AAC/C,MAAKC,GAAL,CAAS,2BAAT,EAAsC,EAAtC,EAA0C,EAAEC,MAAM,QAAR,EAA1C;AACA,CAFD,yH","file":"/packages/rocketchat_error-handler.js","sourcesContent":["class ErrorHandler {\n\tconstructor() {\n\t\tthis.reporting = false;\n\t\tthis.rid = null;\n\t\tthis.lastError = null;\n\n\t\tthis.registerHandlers();\n\n\t\tRocketChat.settings.get('Log_Exceptions_to_Channel', (key, value) => {\n\t\t\tif (value.trim()) {\n\t\t\t\tthis.reporting = true;\n\t\t\t\tthis.rid = this.getRoomId(value);\n\t\t\t} else {\n\t\t\t\tthis.reporting = false;\n\t\t\t\tthis.rid = '';\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterHandlers() {\n\t\tprocess.on('uncaughtException', Meteor.bindEnvironment((error) => {\n\t\t\tif (!this.reporting) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.trackError(error.message, error.stack);\n\t\t}));\n\n\t\tconst self = this;\n\t\tlet originalMeteorDebug = Meteor._debug;\n\t\tMeteor._debug = function(message, stack) {\n\t\t\tif (!self.reporting) {\n\t\t\t\treturn originalMeteorDebug.call(this, message, stack);\n\t\t\t}\n\t\t\tself.trackError(message, stack);\n\t\t\treturn originalMeteorDebug.apply(this, arguments);\n\t\t};\n\t}\n\n\tgetRoomId(roomName) {\n\t\troomName = roomName.replace('#');\n\t\tlet room = RocketChat.models.Rooms.findOneByName(roomName, { fields: { _id: 1, t: 1 } });\n\t\tif (room && (room.t === 'c' || room.t === 'p')) {\n\t\t\treturn room._id;\n\t\t} else {\n\t\t\tthis.reporting = false;\n\t\t}\n\t}\n\n\ttrackError(message, stack) {\n\t\tif (this.reporting && this.rid && this.lastError !== message) {\n\t\t\tthis.lastError = message;\n\t\t\tlet user = RocketChat.models.Users.findOneById('rocket.cat');\n\n\t\t\tif (stack) {\n\t\t\t\tmessage = message + '\\n```\\n' + stack + '\\n```';\n\t\t\t}\n\n\t\t\tRocketChat.sendMessage(user, { msg: message }, { _id: this.rid });\n\t\t}\n\t}\n}\n\nRocketChat.ErrorHandler = new ErrorHandler;\n","RocketChat.settings.addGroup('Logs', function() {\n\tthis.add('Log_Exceptions_to_Channel', '', { type: 'string' });\n});\n"]}